{"version":3,"sources":["Api/index.js","Components/Utils/setAuthToken.js","Actions/auth.js","Actions/actionConstant.js","Components/Utils/errorSnackBar.js","Components/Auth/Login.jsx","Components/Auth/SignUp.jsx","Components/Manager/SideBar/index.jsx","Components/Navbar/index.jsx","Components/Utils/isAuthenticate.js","Components/Utils/AdminRoute.js","Components/Utils/ClientRoute.js","Components/Auth/Profile.jsx","Components/Auth/UpdateProfile.jsx","Components/Utils/alertDialog.js","Components/Utils/style.js","Components/Manager/User/SingleUser.jsx","Components/Manager/User/User.jsx","Actions/ticket.js","Components/Manager/User/UserById.jsx","Components/Utils/changeAlias.js","Actions/station.js","Actions/company.js","Components/Manager/Station/SingleStation.jsx","Components/Manager/Station/Station.jsx","Components/Manager/Station/AddStation.jsx","Components/Manager/Station/EditStation.jsx","Components/Manager/Station/StationById.jsx","Components/Manager/Company/SingleCompany.jsx","Components/Manager/Company/Company.jsx","Components/Manager/Company/AddCompany.jsx","Components/Manager/Company/EditCompany.jsx","Components/Manager/Company/CompanyById.jsx","Actions/trip.js","Components/Manager/Trip/SingleTrip.jsx","Components/Manager/Trip/Trip.jsx","Components/Manager/Trip/TripById.jsx","Components/Manager/Trip/TimePicker.jsx","Components/Manager/Trip/AddTrip.jsx","Components/Manager/Trip/EditTrip.jsx","Components/Manager/Ticket/SingleTicket.jsx","Components/Manager/Ticket/Ticket.jsx","Components/Manager/Ticket/TicketById.jsx","Components/Client/SingleTicket.jsx","Components/Client/TicketManager.jsx","Components/Client/SelectSeats.jsx","Components/Client/informationForm.jsx","Components/Client/Stepper.jsx","Components/Client/Booking.jsx","Components/Client/SingleTrip.jsx","Components/Client/Trip.jsx","Components/Client/Explore.jsx","Components/Utils/NotFound.js","App.js","serviceWorker.js","Reducers/auth.js","Reducers/trips.js","Reducers/stations.js","Reducers/companies.js","Reducers/tickets.js","Reducers/users.js","Reducers/layout.js","Reducers/index.js","index.js"],"names":["api","axios","create","baseURL","setAuthToken","token","defaults","headers","common","login","credentials","dispatch","post","then","res","localStorage","setItem","data","decoded","jwtDecode","setCurrentUser","Promise","resolve","message","catch","err","reject","logout","removeItem","type","payload","getUsers","get","getUserById","id","deleteUser","delete","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","palette","dark","display","alignItems","MySnackbarContentWrapper","props","classes","className","variant","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","icon","iconVariant","useStyles2","margin","width","padding","CustomizedSnackbars","Login","onChange","e","setState","target","name","value","onSubmit","preventDefault","state","email","password","history","push","this","Grid","style","paddingTop","container","direction","justify","item","xs","sm","md","Paper","autoComplete","_","TextField","autoFocus","color","size","label","Button","onClick","Typography","isEmpty","Component","connect","SignUp","password2","fullName","signup","useStyles","root","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","justifyContent","mixins","content","flexGrow","withRouter","auth","isAuthenticate","profile","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","src","alt","to","textDecoration","Drawer","paper","Divider","component","ListItem","button","ListItemIcon","ListItemText","primary","paragraph","Navbar","getItem","exp","Date","getTime","AdminRoute","rest","render","userType","pathname","from","location","ClientRoute","Profile","card","minWidth","title","link","fontSize","image","height","img","maxWidth","maxHeight","user","Container","Card","CardContent","gutterBottom","CardActions","UpdateProfile","updateUser","put","AlertDialog","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteAction","_id","User","Fragment","users","filter","u","map","index","SingleUser","key","getTickets","createTicket","cancelBooking","deleteTicket","UserById","componentDidMount","a","userId","match","params","userEditing","tickets","ticket","t","layout","changeAlias","alias","str","arrStr","split","i","length","toLowerCase","replace","toUpperCase","join","getStations","getStationById","deleteStation","getCompanies","getCompanyById","getAdviseCompany","fromStation","toStation","deleteCompany","station","address","province","ButtonBase","companies","com","MenuProps","PaperProps","Station","cancelFilter","companiesFilter","provinceFilter","stationName","List","provinceList","uniq","stations","stt","searchStation","indexOf","filterByCompany","every","filterByProvince","renderStation","intersection","FormControl","InputLabel","Select","multiple","input","Input","renderValue","selected","flexWrap","Chip","company","MenuItem","Checkbox","checked","SingleStation","AddStation","createStation","EditStation","updateStation","stationId","stationEditing","companyId","console","log","StationById","carType","ListCar","Company","stationsFilter","carTypeFilter","companyName","searchCompany","filterByStation","filterByCarType","renderCompany","car","SingleCompany","AddCompany","createCompany","EditCompany","updateCompany","companyEditing","CompanyById","getTrips","getTripById","deleteTrip","trip","price","displayType","thousandSeparator","suffix","format","startTime","seats","isBooked","Trip","fromStationFilter","fromProvinceFilter","toStationFilter","toProvinceFilter","tripName","companiesList","stationsList","trips","searchTrip","filterByFromProvince","filterByToProvince","filterByFromStation","filterByToStation","renderTrip","sort","b","SingleTrip","TripById","tripId","tripEditing","code","TimePicker","nowTime","selectedDate","setSelectedDate","useEffect","handleDateChange","date","utils","DateFnsUtils","KeyboardButtonProps","AddTrip","onChangeStation","adviceCompany","onChangeCompany","find","c","onChangeDate","createTrip","stationList","EditTrip","updateTrip","companyOfTrip","SimpleCard","marginTop","seat","totalPrice","note","Ticket","TicketById","ticketId","getTicketById","ticketEditing","SingleTicket","getTrip","marginBottom","phone","getTripByIdClient","SelectSeats","changeSeat","seatCode","seatCodes","selectSeat","pull","availableSeat","seatDisable","renderSeats","Seats","ButtonGroup","s","disabled","slice","InformationForm","setInfo","backButton","instructions","activeStep","setActiveStep","steps","handleNext","prevActiveStep","Stepper","alternativeLabel","Step","StepLabel","stepIndex","backgroundSeat","getStepContent","bookingTickets","Booking","TripList","Explore","NotFound","App","path","exact","TicketManager","Boolean","window","hostname","initialState","authReducer","action","tripReducer","findIndex","tr","stationReducer","st","companyReducer","ticketReducer","userReducer","layoutReducer","rootReducer","combineReducers","middlewares","thunk","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5b82523.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL : \"https://vexere-happytrip.herokuapp.com/api\"\r\n})\r\nexport default api","import api from '../../Api';\r\n\r\nconst setAuthToken = (token) => {\r\n    if (token) {\r\n        api.defaults.headers.common['token'] = token;\r\n    }\r\n    else {\r\n        delete api.defaults.headers.common['token'];\r\n    }\r\n}\r\nexport default setAuthToken","/**\r\n * @todo login\r\n * @param \r\n */\r\n\r\nimport api from '../Api';\r\nimport jwtDecode from 'jwt-decode';\r\nimport setAuthToken from '../Components/Utils/setAuthToken';\r\nimport * as types from './actionConstant';\r\n\r\nexport const login = (credentials) => (dispatch) => {\r\n  return api\r\n    .post(\"/users/login\", credentials)\r\n    .then(res => {\r\n        localStorage.setItem('token',res.data.token);\r\n        const {token} = res.data;\r\n        const decoded = jwtDecode(token);\r\n        dispatch( setCurrentUser(decoded));\r\n        setAuthToken(token);\r\n        return Promise.resolve({message: \"Đăng nhập thành công\"})\r\n    })\r\n    .catch(err => Promise.reject({message: \"Đăng nhập thất bại\", err})\r\n    );\r\n};\r\n\r\nexport const signup = credentials => (dispatch) => {\r\n    return api\r\n      .post(\"/users\", credentials)\r\n      .then(() => {\r\n          return Promise.resolve({message: \"Đăng ký thành công, vui lòng đăng nhập để tiếp tục\"})\r\n      })\r\n      .catch(err => Promise.reject({\r\n          message: \"Đăng ký không thành công \",\r\n          err\r\n      }))\r\n  };\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('token');\r\n    dispatch( setCurrentUser({}))\r\n    \r\n    setAuthToken()\r\n}\r\n\r\nexport const setCurrentUser = (data) => {\r\n    return{\r\n        type: types.SET_CURRENT_USER,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const getUsers = () => (dispatch) => {\r\n    return api.get('/users')\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.GET_USERS,\r\n                payload: res.data\r\n            });\r\n            \r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const getUserById = (id) => (dispatch) => {\r\n    return api.get(`users/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.GET_USERBYID,\r\n                payload: res.data\r\n            });\r\n            \r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\nexport const updateUser = (data) => (dispatch) => {\r\n    return api.put(`/users/updatemyprofile`, data)\r\n       .then(res => {\r\n           dispatch({\r\n               type: types.SET_CURRENT_USER,\r\n               payload: res.data\r\n           })\r\n           Promise.resolve(res.data)\r\n       })\r\n       .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const deleteUser = (id) => (dispatch) => {\r\n    return api.delete(`/users/${id}`)\r\n        .then(() => {\r\n            dispatch(getUsers())\r\n        })\r\n}","export const GET_STATIONS = \"GET_STATIONS\"\r\nexport const GET_STATIONBYID = \"GET_STATIONBYID\"\r\nexport const CREATE_STATION = \"CREATE_STATION\"\r\nexport const UPDATE_STATION = \"UPDATE_STATION\"\r\nexport const DELETE_STATION = \"DELETE_STATION\"\r\n\r\nexport const GET_TICKETS = \"GET_TICKETS\"\r\nexport const GET_TICKETBYID = \"GET_TICKETBYID\"\r\nexport const CREATE_TICKET = \"CREATE_TICKET\"\r\nexport const UPDATE_TICKET = \"UPDATE_TICKET\"\r\nexport const DELETE_TICKET = \"DELETE_TICKET\"\r\nexport const CANCEL_BOOKING = \"CANCEL_BOOKING\"\r\n\r\nexport const GET_COMPANIES = \"GET_COMPANIES\"\r\nexport const GET_COMPANYBYID = \"GET_COMPANYBYID\"\r\nexport const GET_ADVICECOMPANY = \"GET_ADVICECOMPANY\"\r\nexport const CREATE_COMPANY = \"CREATE_COMPANY\"\r\nexport const UPDATE_COMPANY = \"UPDATE_COMPANY\"\r\nexport const DELETE_COMPANY = \"DELETE_COMPANY\"\r\n\r\nexport const GET_TRIPS = \"GET_TRIPS\"\r\nexport const GET_TRIPBYID = \"GET_TRIPBYID\"\r\nexport const GET_ADVICETRIP = \"GET_ADVICETRIP\"\r\nexport const CREATE_TRIP = \"CREATE_TRIP\"\r\nexport const UPDATE_TRIP = \"UPDATE_TRIP\"\r\nexport const DELETE_TRIP = \"DELETE_TRIP\"\r\n\r\nexport const GET_USERS = \"GET_USERS\"\r\nexport const GET_USERBYID = \"GET_USERBYID\"\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\"\r\nexport const UPDATE_USER = \"UPDATE_USER\"\r\nexport const GET_DELETEUSER = \"GET_DELETEUSER\"\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\r\n};\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: 15,\r\n    display: \"inline-block\",\r\n    width : \"40%\",\r\n    padding: 0\r\n  }\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles2();\r\n  return (\r\n    <div >\r\n      <MySnackbarContentWrapper\r\n        variant=\"error\"\r\n        className={classes.margin}\r\n        message={props.error}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport _ from \"lodash\";\r\nimport { login } from \"../../Actions/auth\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport ErrorSnackBar from './../Utils/errorSnackBar';\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      error: \"\"\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    this.props\r\n      .login({ email, password })\r\n      .then(() => {\r\n        this.props.history.push(\"./\");\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n    return (\r\n      <div className=\" login-page\">\r\n        <Grid\r\n          style={{ paddingTop: 100 }}\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-end\"\r\n        >\r\n          <Grid item xs={8} sm={6} md={4}>\r\n            <Paper style={{ backgroundColor: \"#dee6e5cc\" }}>\r\n              <h1>Chào mừng bạn đến với HAPPYTRIP</h1>\r\n              <h3>Đăng nhập</h3>\r\n              <form autoComplete=\"off\">\r\n                <div>\r\n                {_.get(this.state, \"error.err.response.data.email\") && (\r\n                    <ErrorSnackBar\r\n                      error={_.get(this.state, \"error.err.response.data.email\", \"\")}\r\n                    />\r\n                  )}\r\n                  <TextField\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    autoFocus={true}\r\n                    color=\"primary\"\r\n                    value={email}\r\n                    size=\"medium\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    style={{ margin: \"15px\", width: \"70%\" }}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                {_.get(this.state, \"error.err.response.data.password\") && (\r\n                    <ErrorSnackBar\r\n                      error={_.get(this.state, \"error.err.response.data.password\", \"\")}\r\n                    />\r\n                  )}\r\n                  <TextField\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    color=\"primary\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    size=\"medium\"\r\n                    label=\"Mật khẩu\"\r\n                    variant=\"outlined\"\r\n                    style={{ margin: \"15px\", width: \"70%\" }}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ margin: \"15px\" }}\r\n                  onClick={this.onSubmit}\r\n                >\r\n                  Đăng nhập\r\n                </Button>\r\n                <Typography>\r\n                  Chưa có tài khoản ?{\" \"}\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    style={{ margin: \"15px\" }}\r\n                    onClick={() => this.props.history.push(\"./signup\")}\r\n                  >\r\n                    Đăng ký mới\r\n                  </Button>\r\n                </Typography>\r\n                {!_.isEmpty(this.state.error) && (\r\n                  <SnackbarContent\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                      <span id=\"client-snackbar\">\r\n                        {_.get(this.state, \"error.message\")}\r\n                      </span>\r\n                    }\r\n                  />\r\n                )}\r\n              </form>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { login })(Login);\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport _ from \"lodash\";\r\nimport { signup, login } from \"../../Actions/auth\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport ErrorSnackBar from './../Utils/errorSnackBar';\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      fullName: \"\",\r\n      error: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      error: \"\"\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { email, password, password2, fullName } = this.state;\r\n    this.props\r\n      .signup({ email, password, password2, fullName })\r\n      .then(() => {\r\n        this.props.login({email, password})\r\n      })\r\n      .then( () => this.props.history.push('./'))\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, password2, fullName } = this.state;\r\n    return (\r\n      <div className=\" login-page\">\r\n        <Grid\r\n          style={{ paddingTop: 100 }}\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-end\"\r\n        >\r\n          <Grid item xs={8} sm={6} md={4}>\r\n            <Paper style={{ backgroundColor: \"#dee6e5cc\" }}>\r\n              <h1>Chào mừng bạn đến với VEXERE.COM</h1>\r\n              <h3>Đăng ký tài khoản mới</h3>\r\n              <form autoComplete=\"off\">\r\n                <div>\r\n                  {_.get(this.state, \"error.err.response.data.email\") && (\r\n                    <ErrorSnackBar\r\n                      error={_.get(this.state, \"error.err.response.data.email\", \"\")}\r\n                    />\r\n                  )}\r\n                  <TextField\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    autoFocus={true}\r\n                    color=\"primary\"\r\n                    value={email}\r\n                    size=\"medium\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    style={{ margin: \"15px\", width: \"70%\" }}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                {_.get(this.state, \"error.err.response.data.password\") && (\r\n                    <ErrorSnackBar\r\n                      error={_.get(this.state, \"error.err.response.data.password\", \"\")}\r\n                    />\r\n                  )}\r\n                  <TextField\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    color=\"primary\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    size=\"medium\"\r\n                    label=\"Mật khẩu\"\r\n                    variant=\"outlined\"\r\n                    style={{ margin: \"15px\", width: \"70%\" }}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                {_.get(this.state, \"error.err.response.data.password2\") && (\r\n                    <ErrorSnackBar\r\n                      error={_.get(this.state, \"error.err.response.data.password2\", \"\")}\r\n                    />\r\n                  )}\r\n                  <TextField\r\n                    id=\"password2\"\r\n                    type=\"password\"\r\n                    color=\"primary\"\r\n                    name=\"password2\"\r\n                    value={password2}\r\n                    size=\"medium\"\r\n                    label=\"Nhập lại mật khẩu\"\r\n                    variant=\"outlined\"\r\n                    style={{ margin: \"15px\", width: \"70%\" }}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                {_.get(this.state, \"error.err.response.data.fullName\") && (\r\n                    <ErrorSnackBar\r\n                      error={_.get(this.state, \"error.err.response.data.fullName\", \"\")}\r\n                    />\r\n                  )}\r\n                  <TextField\r\n                    id=\"fullName\"\r\n                    color=\"primary\"\r\n                    name=\"fullName\"\r\n                    value={fullName}\r\n                    size=\"medium\"\r\n                    label=\"Nhập họ tên\"\r\n                    variant=\"outlined\"\r\n                    style={{ margin: \"15px\", width: \"70%\" }}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ margin: \"15px\" }}\r\n                  onClick={this.onSubmit}\r\n                >\r\n                  Đăng ký tài khoản\r\n                </Button>\r\n\r\n                <Typography>\r\n                  Đã có tài khoản ?{\" \"}\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    style={{ margin: \"15px\" }}\r\n                    onClick={() => this.props.history.push(\"./login\")}\r\n                  >\r\n                    Đăng nhập ngay\r\n                  </Button>\r\n                </Typography>\r\n                {!_.isEmpty(this.state.error) && (\r\n                  <SnackbarContent\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                      <span id=\"client-snackbar\">\r\n                        {_.get(this.state, \"error.message\")}\r\n                      </span>\r\n                    }\r\n                  />\r\n                )}\r\n              </form>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { signup, login })(SignUp);\r\n","import React from 'react';\r\nimport {Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport EmojiTransportationIcon from '@material-ui/icons/EmojiTransportation';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {logout} from '../../../Actions/auth';\r\n \r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(6) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(8) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst SideBar = props => {\r\n  const { auth } = props;\r\n  const { isAuthenticate, profile } = auth;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => props.history.push(\"/\")}>\r\n              <img\r\n                src=\"https://storage.googleapis.com/fe-production/icon_vxr_full.svg\"\r\n                alt=\"logo\"\r\n              />\r\n            </IconButton>\r\n            <Typography variant=\"h6\">\r\n              Chào mừng <Link to=\"/profile\" style={{textDecoration: \"none\"}}>{isAuthenticate ? profile.fullName : \"\"}</Link>\r\n            </Typography>\r\n            <div style={{marginLeft : \"auto\"}}>\r\n              <Button\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                  props.logout();\r\n                  props.history.push(\"/\");\r\n                }}\r\n              >\r\n                Đăng xuất\r\n              </Button>\r\n              </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open\r\n          })\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List component=\"nav\">\r\n          <ListItem button onClick={() => props.history.push(\"/manager/trips\")}>\r\n            <ListItemIcon>\r\n              <DirectionsBusIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"QUẢN LÝ CHUYẾN ĐI\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={() => props.history.push(\"/manager/stations\")}\r\n          >\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"QUẢN LÝ BẾN XE\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={() => props.history.push(\"/manager/companies\")}\r\n          >\r\n            <ListItemIcon>\r\n              <EmojiTransportationIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"QUẢN LÝ NHÀ XE\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={() => props.history.push(\"/manager/tickets\")}\r\n          >\r\n            <ListItemIcon>\r\n              <ConfirmationNumberIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"QUẢN LÝ VÉ XE\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => props.history.push(\"/manager/users\")}>\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"QUẢN LÝ NGƯỜI DÙNG\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Typography paragraph></Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(null, { logout })(SideBar))","import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { logout } from \"../../Actions/auth\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { auth } = this.props;\r\n    const { isAuthenticate, profile } = auth;\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton onClick={() => this.props.history.push(\"/\")}>\r\n              <img\r\n                src=\"https://storage.googleapis.com/fe-production/icon_vxr_full.svg\"\r\n                alt=\"logo\"\r\n              />\r\n            </IconButton>\r\n            <Typography variant=\"h6\">\r\n              Chào mừng <Link to=\"/profile\" style={{textDecoration: \"none\"}}>{isAuthenticate ? profile.fullName : \"\"}</Link>\r\n            </Typography>\r\n\r\n            {isAuthenticate && (\r\n              <div style={{marginLeft : \"auto\"}}>\r\n              <Button\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                  this.props.logout();\r\n                  this.props.history.push(\"/\");\r\n                }}\r\n              >\r\n                Đăng xuất\r\n              </Button>\r\n              </div>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(null, { logout })(Navbar));\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nconst isAuthenticate = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return false;\r\n\r\n    const decoded = jwtDecode(token);\r\n    if (decoded.exp < new Date().getTime() /1000) return false;\r\n    return {token, decoded};\r\n}\r\nexport default isAuthenticate;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport isAuthenticate from './isAuthenticate';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    // props means components passed down to this private route component\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            (isAuthenticate() && isAuthenticate().decoded.userType === 'admin' ) ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/notfound\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AdminRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport isAuthenticate from './isAuthenticate';\r\n\r\nconst ClientRoute = ({ component: Component, ...rest }) => (\r\n    // props means components passed down to this private route component\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            (isAuthenticate() && isAuthenticate().decoded.userType === 'client' ) ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/notfound\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default ClientRoute;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserById, deleteUser } from \"../../Actions/auth\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport _ from \"lodash\";\r\n\r\nclass Profile extends Component {\r\n  classes = {\r\n    card: {\r\n      minWidth: 275,\r\n      margin: 20\r\n    },\r\n\r\n    title: {\r\n      color: \"#6b8a78\"\r\n    },\r\n    link: {\r\n      color: \"#767b06d6\",\r\n      textDecoration: \"none\",\r\n      fontSize: \"16px\"\r\n    },\r\n    image: {\r\n      width: 200,\r\n      height: 160\r\n    },\r\n    img: {\r\n      margin: \"auto\",\r\n      display: \"block\",\r\n      maxWidth: \"100%\",\r\n      maxHeight: \"100%\"\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const user = this.props.user;\r\n    return (\r\n      <Container maxWidth=\"md\">\r\n        <h2 className=\"title_addnew\">THÔNG TIN TÀI KHOẢN</h2>\r\n        <Card style={this.classes.card}>\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-evenly\"\r\n              alignItems=\"flex-start\"\r\n            >\r\n              <Typography variant=\"h5\" style={this.classes.title} gutterBottom>\r\n                {_.get(user, \"fullName\")}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                Email : {_.get(user, \"email\")}\r\n              </Typography>\r\n            </Grid>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"auto\" }}\r\n              onClick={() => this.props.history.push(`/updateprofile`)}\r\n            >\r\n              Cập nhật thông tin\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => this.props.history.push(\"./\")}\r\n            >\r\n              Trở về\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getUserById, deleteUser })(Profile);\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport _ from \"lodash\";\r\nimport { updateUser } from \"../../Actions/auth\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorSnackBar from \"./../Utils/errorSnackBar\";\r\nclass UpdateProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      fullName: \"\",\r\n      error: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      email: this.props.user.email,\r\n      fullName: this.props.user.fullName\r\n    });\r\n  }\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      error: \"\"\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { email, password, password2, fullName } = this.state;\r\n    this.props\r\n      .updateUser({ email, password, password2, fullName })\r\n      .then(() => {\r\n        this.props.history.push(\"/profile\");\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, password2, fullName } = this.state;\r\n    return (\r\n      <Grid\r\n        style={{ paddingTop: 100 }}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <Grid item xs={8} sm={6} md={4}>\r\n          <h2 className=\"title_addnew\">CẬP NHẬT THÔNG TIN TÀI KHOẢN</h2>\r\n          <form autoComplete=\"off\">\r\n            <div>\r\n              {_.get(this.state, \"error.response.data.email\") && (\r\n                <ErrorSnackBar\r\n                  error={_.get(this.state, \"error.response.data.email\", \"\")}\r\n                />\r\n              )}\r\n              <TextField\r\n                id=\"email\"\r\n                name=\"email\"\r\n                autoFocus={true}\r\n                color=\"primary\"\r\n                value={email}\r\n                size=\"medium\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                style={{ margin: \"15px\", width: \"70%\" }}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <div>\r\n              {_.get(this.state, \"error.response.data.password\") && (\r\n                <ErrorSnackBar\r\n                  error={_.get(this.state, \"error.response.data.password\", \"\")}\r\n                />\r\n              )}\r\n              {_.get(this.state, \"error.response.data.message\") && (\r\n                <ErrorSnackBar\r\n                  error={_.get(this.state, \"error.response.data.message\", \"\")}\r\n                />\r\n              )}\r\n              <TextField\r\n                id=\"password\"\r\n                type=\"password\"\r\n                color=\"primary\"\r\n                name=\"password\"\r\n                value={password}\r\n                size=\"medium\"\r\n                label=\"Mật khẩu cũ\"\r\n                variant=\"outlined\"\r\n                style={{ margin: \"15px\", width: \"70%\" }}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <div>\r\n              {_.get(this.state, \"error.response.data.password2\") && (\r\n                <ErrorSnackBar\r\n                  error={_.get(this.state, \"error.response.data.password2\", \"\")}\r\n                />\r\n              )}\r\n              <TextField\r\n                id=\"password2\"\r\n                type=\"password\"\r\n                color=\"primary\"\r\n                name=\"password2\"\r\n                value={password2}\r\n                size=\"medium\"\r\n                label=\"Mật khẩu mới\"\r\n                variant=\"outlined\"\r\n                style={{ margin: \"15px\", width: \"70%\" }}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              {_.get(this.state, \"error.response.data.fullName\") && (\r\n                <ErrorSnackBar\r\n                  error={_.get(this.state, \"error.response.data.fullName\", \"\")}\r\n                />\r\n              )}\r\n              <TextField\r\n                id=\"fullName\"\r\n                color=\"primary\"\r\n                name=\"fullName\"\r\n                value={fullName}\r\n                size=\"medium\"\r\n                label=\"Nhập họ tên\"\r\n                variant=\"outlined\"\r\n                style={{ margin: \"15px\", width: \"70%\" }}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ margin: \"15px\" }}\r\n              onClick={this.onSubmit}\r\n            >\r\n              Lưu thay đổi\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              style={{ margin: \"15px\" }}\r\n              onClick={ () => this.props.history.push('/profile')}\r\n            >\r\n              Hủy\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { updateUser })(UpdateProfile);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\r\n        {`Xóa ${props.type}`}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{`Bạn có chắc chắn muốn xóa ${props.type}`}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {`Thông tin ${props.type} sẽ bị xóa và không thể khôi phục được`}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={() => {\r\n            handleClose ();\r\n            props.deleteAction(props.id)\r\n            }} color=\"primary\" autoFocus>\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      minWidth: 275,\r\n      margin: 20\r\n    },\r\n  \r\n    title: {\r\n      color: \"#c9620f\",\r\n      textDecoration: \"none\",\r\n      fontSize : \"24px\"\r\n    },\r\n    link: {\r\n      color: \"#0b6077d6\",\r\n      textDecoration: \"none\",\r\n      fontSize : \"16px\"\r\n    },\r\n    image: {\r\n      width: 200,\r\n      height: 160\r\n    },\r\n    img: {\r\n      margin: \"auto\",\r\n      display: \"block\",\r\n      maxWidth: \"100%\",\r\n      maxHeight: \"100%\"\r\n    }\r\n  });\r\n\r\n  export default useStyles","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link, withRouter } from \"react-router-dom\";\r\nimport AlertDialog from \"../../Utils/alertDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useStyles from '../../Utils/style';\r\n\r\nconst SimpleCard = props => {\r\n  const classes = useStyles();\r\n  const { user } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"flex-start\">\r\n            <Link to={`/manager/users/${user._id}`} className={classes.title}>\r\n              Họ tên: {user.fullName}\r\n            </Link>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Email: {user.email}\r\n            </Typography>\r\n            \r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions >\r\n        <div style={{ marginLeft: \"auto\" }}> \r\n        <AlertDialog\r\n          id={user._id}\r\n          deleteAction={props.deleteUser}\r\n          type={\"Người dùng\"}\r\n        />\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withRouter(SimpleCard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { getUsers, deleteUser } from \"./../../../Actions/auth\";\r\nimport SingleUser from './SingleUser';\r\n\r\nclass User extends Component {\r\n  componentDidMount() {\r\n    this.props.getUsers();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Container maxWidth=\"md\">\r\n          <h1 className=\"title_addnew\">QUẢN LÝ NGƯỜI DÙNG</h1>\r\n          \r\n          {this.props.users.filter(u => u.userType === \"client\").map((user, index) => {\r\n            return (\r\n              <SingleUser\r\n                user={user}\r\n                key={index}\r\n                deleteUser={this.props.deleteUser}\r\n              />\r\n            );\r\n          })}\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.users\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getUsers, deleteUser })(User);\r\n","import api from \"../Api\";\r\nimport * as types from \"./actionConstant\";\r\n\r\nexport const getTickets = () => dispatch => {\r\n  return api\r\n    .get(\"/tickets\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: types.GET_TICKETS,\r\n        payload: res.data\r\n      });\r\n      Promise.resolve(res.data);\r\n    })\r\n    .catch(err => Promise.reject(err));\r\n};\r\n\r\nexport const getTicketById = (id) => dispatch => {\r\n  return api\r\n    .get(`/tickets/${id}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: types.GET_TICKETBYID,\r\n        payload: res.data\r\n      });\r\n      Promise.resolve(res.data);\r\n    })\r\n    .catch(err => Promise.reject(err));\r\n};\r\n\r\nexport const createTicket = data => dispatch => {\r\n  return api\r\n    .post(\"/tickets/booking\", data)\r\n    .then(res => {\r\n      dispatch({\r\n        type: types.CREATE_TICKET,\r\n        payload: res.data\r\n      });\r\n      Promise.resolve(res.data);\r\n    })\r\n    .catch(err => Promise.reject(err));\r\n};\r\n\r\nexport const cancelBooking = () => dispatch => {\r\n  dispatch({\r\n    type: types.CANCEL_BOOKING\r\n  });\r\n};\r\n\r\nexport const deleteTicket = (id) => (dispatch) => {\r\n  api.delete(`/tickets/${id}`).then(() => {\r\n    dispatch(getTickets());\r\n  });\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUserById, deleteUser } from \"./../../../Actions/auth\";\r\nimport { getTickets } from \"./../../../Actions/ticket\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AlertDialog from \"../../Utils/alertDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport classes from '../../Utils/classes.json';\r\nimport _ from \"lodash\";\r\n\r\nclass UserById extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {},\r\n      tickets: []\r\n    };\r\n  }\r\n  classes = classes;\r\n\r\n  deleteUser = id => {\r\n    this.props.deleteUser(id);\r\n    this.props.history.push(\"./\");\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const userId = this.props.match.params.id;\r\n    await this.props.getUserById(userId);\r\n    await this.props.getTickets();\r\n    await this.setState({\r\n      user: this.props.userEditing,\r\n      tickets: this.props.tickets\r\n    });\r\n\r\n  };\r\n  render() {\r\n    const { user, tickets } = this.state;\r\n    return (\r\n      <Container>\r\n        <Card style={this.classes.card}>\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-evenly\"\r\n              alignItems=\"flex-start\"\r\n            >\r\n              <Grid item md={6}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  style={this.classes.title}\r\n                  gutterBottom\r\n                >\r\n                  {_.get(user, \"fullName\")}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Email : {_.get(user, \"email\")}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <Typography color=\"textSecondary\">\r\n                  Mã vé xe đã đặt :{\" \"}\r\n                  {tickets\r\n                    .filter(ticket => ticket.userId._id === user._id)\r\n                    .map((t, key) => (\r\n                        <Link\r\n                         key={key}\r\n                          to={`/manager/tickets/${t._id}`}\r\n                          style={classes.link}\r\n                        >\r\n                          {t._id}\r\n                        </Link>\r\n                    ))}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"auto\" }}\r\n              onClick={() => this.props.history.push(\"./\")}\r\n            >\r\n              Trở về\r\n            </Button>\r\n            <AlertDialog\r\n              id={_.get(user, \"_id\")}\r\n              deleteAction={this.deleteUser}\r\n              type={\"Người dùng\"}\r\n            />\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userEditing: state.layout.userEditing,\r\n    tickets: state.tickets\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getUserById, deleteUser, getTickets })(UserById);\r\n","export function changeAlias(alias) {\r\n    const arrStr = alias.split('');\r\n    function change(str) {\r\n      str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\r\n      str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\r\n      str = str.replace(/ì|í|ị|ỉ|ĩ/g,'i');\r\n      str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\r\n      str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\r\n      str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\r\n      str = str.replace(/đ/g, 'd');\r\n      str = str.replace(/!|@|%|\\^|\\*|\\(|\\)|=|<|>|\\?|\\/|,|\\.|:|;|'|'|&|#|\\[|\\]|~|$|_/g,'-');\r\n      str = str.replace(/-+-,/g,'-');\r\n      str = str.replace(/^-+|-+$/g, '');\r\n      str = str.replace(/\\s+/g, '-');\r\n      return str;\r\n    }\r\n  \r\n    for (let i = 0; i < arrStr.length; i++) {\r\n        arrStr[i] = change(arrStr[i].toLowerCase()).toUpperCase();\r\n    }\r\n  \r\n    return arrStr.join('').replace(/-+/g, '');\r\n  }","import api from '../Api';\r\nimport * as types from './actionConstant'\r\n\r\nexport const getStations = () => (dispatch) => {\r\n    return api.get('/stations')\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.GET_STATIONS,\r\n                payload: res.data\r\n            })\r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\nexport const getStationById = (id) => (dispatch) => {\r\n    return api.get(`/stations/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.GET_STATIONBYID,\r\n                payload: res.data\r\n            })\r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const createStation = (data) => (dispatch) => {\r\n    return api.post('/stations', data)\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.CREATE_STATION,\r\n                payload: res.data \r\n            })\r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const updateStation = (data) => (dispatch) => {\r\n     return api.put(`/stations/${data._id}`, data)\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.UPDATE_STATION,\r\n                payload: res.data\r\n            })\r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const deleteStation = (id) => (dispatch) => {\r\n    return api.delete(`/stations/${id}`)\r\n        .then(() => {\r\n            dispatch(getStations())\r\n        })\r\n}","import api from '../Api';\r\nimport * as types from './actionConstant';\r\n\r\nexport const getCompanies = () => (dispatch) => {\r\n    return api.get('/companies')\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.GET_COMPANIES,\r\n                payload: res.data\r\n            });\r\n            \r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const getCompanyById = (id) => (dispatch) => {\r\n    return api.get(`/companies/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.GET_COMPANYBYID,\r\n                payload: res.data\r\n            })\r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\nexport const getAdviseCompany = (data) => (dispatch) => {\r\n    return api.get(`/companies/${data.fromStation}/${data.toStation}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.GET_ADVICECOMPANY,\r\n                payload: res.data\r\n            })\r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const createCompany = (data) => (dispatch) => {\r\n    return api.post('/companies', data)\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.CREATE_COMPANY,\r\n                payload: res.data  //object\r\n            })\r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const updateCompany = (data) => (dispatch) => {\r\n    return api.put(`/companies/${data._id}`, data)\r\n       .then(res => {\r\n           dispatch({\r\n               type: types.UPDATE_COMPANY,\r\n               payload: res.data\r\n           })\r\n           Promise.resolve(res.data)\r\n       })\r\n       .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const deleteCompany = (id) => (dispatch) => {\r\n    return api.delete(`/companies/${id}`)\r\n        .then(() => {\r\n            dispatch(getCompanies())\r\n        })\r\n}","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link, withRouter } from \"react-router-dom\";\r\nimport AlertDialog from \"../../Utils/alertDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport useStyles from '../../Utils/style';\r\n\r\nconst SimpleCard = props => {\r\n  const classes = useStyles();\r\n  const { station } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"flex-start\">\r\n          <Grid item md={6}>\r\n            <Link to={`/manager/stations/${station._id}`} className={classes.title}>\r\n              {station.name}\r\n            </Link>\r\n            <Typography color=\"textSecondary\">\r\n              Địa chỉ : {station.address}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Tỉnh : {station.province}\r\n            </Typography>\r\n            <ButtonBase className={classes.image}>\r\n              <img\r\n                className={classes.img}\r\n                alt=\"complex\"\r\n                src={\r\n                  station.image\r\n                    ? station.image\r\n                    : \"https://upload.wikimedia.org/wikipedia/vi/1/1a/Nh%C3%A0_ga_b%E1%BA%BFn_xe_mi%E1%BB%81n_%C4%90%C3%B4ng.JPG\"\r\n                }\r\n              />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <Typography variant=\"h6\" color=\"textPrimary\">\r\n              Danh sách nhà xe :{\" \"}\r\n              {station.companies.map((com, index) => {\r\n                return (\r\n                  <Typography key={index} color=\"textSecondary\">\r\n                    <Link to={`/manager/companies/${com._id}`} className={classes.link}>\r\n                    {com.name}\r\n                    </Link>\r\n                  </Typography>\r\n                );\r\n              })}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          style={{ marginLeft: \"auto\" }}\r\n          onClick={() =>\r\n            props.history.push(`/manager/stations/${station._id}/editstation`)\r\n          }\r\n        >\r\n          Chỉnh sửa\r\n        </Button>\r\n        <AlertDialog\r\n          id={station._id}\r\n          deleteAction={props.deleteStation}\r\n          type={\"Bến xe\"}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withRouter(SimpleCard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeAlias } from \"./../../Utils/changeAlias\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { getStations, deleteStation } from \"../../../Actions/station\";\r\nimport { getCompanies } from \"../../../Actions/company\";\r\nimport SingleStation from \"./SingleStation\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport _ from \"lodash\";\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 300,\r\n      width: 300\r\n    }\r\n  }\r\n};\r\n\r\nclass Station extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stationName: \"\",\r\n      List: [],\r\n      provinceList: [],\r\n      companiesFilter: [],\r\n      provinceFilter: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getStations();\r\n    this.props.getCompanies().then(() => {\r\n      this.setState({\r\n        List: this.props.companies,\r\n        provinceList: _.uniq(this.props.stations.map(stt => stt.province))\r\n      });\r\n    });\r\n  }\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  cancelFilter = () => {\r\n    this.setState({\r\n      companiesFilter: [],\r\n      provinceFilter: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      stationName,\r\n      List,\r\n      companiesFilter,\r\n      provinceList,\r\n      provinceFilter\r\n    } = this.state;\r\n\r\n    let searchStation = [];\r\n    const stations = this.props.stations;\r\n\r\n    // search by stations name\r\n    stations.filter(stt => {\r\n      let name = changeAlias(stt.name);\r\n      if (name.indexOf(changeAlias(stationName)) > -1) {\r\n        searchStation = [...searchStation, stt];\r\n      }\r\n      return stt;\r\n    });\r\n\r\n    // filter by company\r\n\r\n    const filterByCompany = stations.filter(stt =>\r\n      companiesFilter.every(\r\n        com => stt.companies.map(com => com._id).indexOf(com) > -1\r\n      )\r\n    );\r\n\r\n    // filter by province\r\n    let filterByProvince = [];\r\n    if (provinceFilter.length > 0) {\r\n      filterByProvince = stations.filter(\r\n        stt => provinceFilter.indexOf(stt.province) > -1\r\n      );\r\n    } else {\r\n      filterByProvince = stations;\r\n    }\r\n\r\n    const renderStation = _.intersection(\r\n      filterByCompany,\r\n      filterByProvince,\r\n      searchStation\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <h1 className=\"title_addnew\">QUẢN LÝ BẾN XE</h1>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() =>\r\n            this.props.history.push(\"/manager/stations/addstation\")\r\n          }\r\n        >\r\n          Thêm Bến xe\r\n        </Button>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item md={2}></Grid>\r\n          <Grid item md={3}>\r\n            <Card>\r\n              <h2 className=\"title_addnew\">BỘ LỌC & TÌM KIẾM</h2>\r\n              <h3 className=\"title_addnew\">{`Tổng số kết quả : ${renderStation.length}`}</h3>\r\n              <Button\r\n                style={{ justifyContent: \"center\" }}\r\n                variant=\"contained\"\r\n                onClick={() => this.cancelFilter()}\r\n              >\r\n                Hủy\r\n              </Button>\r\n              <CardContent>\r\n                <TextField\r\n                  id=\"stationName\"\r\n                  name=\"stationName\"\r\n                  value={stationName}\r\n                  label=\"Tìm theo tên bến xe\"\r\n                  variant=\"outlined\"\r\n                  style={{ margin: \"15px\", width: \"80%\" }}\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                  <InputLabel>Nhà xe</InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    name=\"companiesFilter\"\r\n                    value={companiesFilter}\r\n                    onChange={this.onChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => (\r\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                        {List.filter(com => selected.indexOf(com._id) > -1).map(\r\n                          com => (\r\n                            <Chip\r\n                              key={com._id}\r\n                              label={com.name}\r\n                              style={{ margin: 2 }}\r\n                            />\r\n                          )\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {List.map(company => (\r\n                      <MenuItem key={company._id} value={company._id}>\r\n                        <Checkbox\r\n                          checked={companiesFilter.indexOf(company._id) > -1}\r\n                        />\r\n                        <ListItemText primary={company.name} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                  <InputLabel>Tỉnh/thành</InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    name=\"provinceFilter\"\r\n                    value={provinceFilter}\r\n                    onChange={this.onChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => (\r\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                        {selected.map(value => (\r\n                          <Chip\r\n                            key={value}\r\n                            label={value}\r\n                            style={{ margin: 2 }}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {provinceList.map(province => (\r\n                      <MenuItem key={province} value={province}>\r\n                        <Checkbox\r\n                          checked={provinceFilter.indexOf(province) > -1}\r\n                        />\r\n                        <ListItemText primary={province} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={7}>\r\n            {renderStation.map((station, index) => {\r\n              return (\r\n                <SingleStation\r\n                  station={station}\r\n                  key={index}\r\n                  getStationById={this.props.getStationById}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stations: state.stations,\r\n    companies: state.companies\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getStations,\r\n  getCompanies,\r\n  deleteStation\r\n})(Station);\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStation } from \"../../../Actions/station\";\r\nimport { getCompanies } from \"../../../Actions/company\";\r\nimport ErrorSnackBar from \"../../Utils/errorSnackBar\";\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 300,\r\n      width: 300\r\n    }\r\n  }\r\n};\r\n\r\nclass AddStation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      province: \"\",\r\n      address: \"\",\r\n      image: \"\",\r\n      companies: [],\r\n      List: [],\r\n      error: {}\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, province, address, companies, image } = this.state;\r\n    const data = { name, province, address, companies, image };\r\n    this.props\r\n      .createStation(data)\r\n      .then(() => this.props.history.push(\"./\"))\r\n      .catch(err => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getCompanies().then(() => {\r\n      this.setState({ List: this.props.companies });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, address, province, companies, image, List } = this.state;\r\n    return (\r\n      <div className=\"add_station\">\r\n        <h1 className=\"title_addnew\">Thêm Bến xe</h1>\r\n        <form autoComplete=\"off\" onSubmit={this.onSubmit}>\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.name\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.name\", \"\")}\r\n              />\r\n            )}\r\n            <TextField\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={name}\r\n              label=\"Tên Bến xe\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.address\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.address\", \"\")}\r\n              />\r\n            )}\r\n            <TextField\r\n              id=\"address\"\r\n              name=\"address\"\r\n              value={address}\r\n              label=\" Địa chỉ\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.province\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.province\", \"\")}\r\n              />\r\n            )}\r\n            <TextField\r\n              id=\"province\"\r\n              name=\"province\"\r\n              value={province}\r\n              label=\"Tỉnh/ Thành phố\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"image\"\r\n              name=\"image\"\r\n              value={image}\r\n              label=\"Link hình ảnh\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormControl style={{ margin: \"15px\", width: \"40%\" }}>\r\n              <InputLabel>Chọn Nhà xe</InputLabel>\r\n              <Select\r\n                multiple\r\n                name=\"companies\"\r\n                value={companies}\r\n                onChange={this.onChange}\r\n                input={<Input />}\r\n                renderValue={selected => (\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    {List.filter(com => selected.indexOf(com._id) > -1).map(\r\n                      com => (\r\n                        <Chip\r\n                          key={com._id}\r\n                          label={com.name}\r\n                          style={{ margin: 2 }}\r\n                        />\r\n                      )\r\n                    )}\r\n                  </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {List.map(company => (\r\n                  <MenuItem key={company._id} value={company._id}>\r\n                    <Checkbox checked={companies.indexOf(company._id) > -1} />\r\n                    <ListItemText primary={company.name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.onSubmit}\r\n          >\r\n            Lưu\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.props.history.push(\"./\")}\r\n          >\r\n            Hủy\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    companies: state.companies\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createStation, getCompanies })(\r\n  AddStation\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStationById, updateStation } from \"../../../Actions/station\";\r\nimport { getCompanies } from \"../../../Actions/company\";\r\nimport ErrorSnackBar from \"../../Utils/errorSnackBar\";\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 300,\r\n      width: 300\r\n    }\r\n  }\r\n};\r\n\r\nclass EditStation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      province: \"\",\r\n      address: \"\",\r\n      image: \"\",\r\n      companies: [],\r\n      List: [],\r\n      error: {},\r\n      _id: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, province, address, image, companies, _id } = this.state;\r\n    const data = { name, province, address, image, companies, _id };\r\n    this.props\r\n      .updateStation(data)\r\n      .then(() => this.props.history.push(\"/manager/stations\"))\r\n      .catch(err => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const stationId = this.props.match.params.id;\r\n    this.props.getCompanies().then(() => {\r\n      this.setState({ List: this.props.companies });\r\n    });\r\n    this.props\r\n      .getStationById(stationId)\r\n      .then(() => {\r\n        const station = this.props.stationEditing;\r\n        const companyId = station.companies.map(com => com._id);\r\n        this.setState({\r\n          name: station.name,\r\n          province: station.province,\r\n          address: station.address,\r\n          image: station.image,\r\n          _id: station._id,\r\n          companies: companyId\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const { name, address, province, image, companies, List } = this.state;\r\n    return (\r\n      <div className=\"add_station\">\r\n        <h1 className=\"title_addnew\"> CHỈNH SỬA BẾN XE</h1>\r\n        <form autoComplete=\"off\" onSubmit={this.onSubmit}>\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.name\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.name\", \"\")}\r\n              />\r\n            )}\r\n            <TextField\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={name}\r\n              label=\"Tên Bến xe\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.address\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.address\", \"\")}\r\n              />\r\n            )}\r\n            <TextField\r\n              id=\"address\"\r\n              name=\"address\"\r\n              value={address}\r\n              label=\"Địa chỉ\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.province\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.province\", \"\")}\r\n              />\r\n            )}\r\n            <TextField\r\n              id=\"province\"\r\n              name=\"province\"\r\n              value={province}\r\n              label=\"Tỉnh/ Thành phố\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"image\"\r\n              name=\"image\"\r\n              value={image}\r\n              label=\"Link hình ảnh\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormControl style={{ margin: \"15px\", width: \"40%\" }}>\r\n              <InputLabel>Chọn Nhà xe</InputLabel>\r\n              <Select\r\n                multiple\r\n                name=\"companies\"\r\n                value={companies}\r\n                onChange={this.onChange}\r\n                input={<Input />}\r\n                renderValue={selected => (\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    {List.filter(com => selected.indexOf(com._id) > -1).map(\r\n                      com => (\r\n                        <Chip\r\n                          key={com._id}\r\n                          label={com.name}\r\n                          style={{ margin: 2 }}\r\n                        />\r\n                      )\r\n                    )}\r\n                  </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {List.map(company => (\r\n                  <MenuItem key={company._id} value={company._id}>\r\n                    <Checkbox checked={companies.indexOf(company._id) > -1} />\r\n                    <ListItemText primary={company.name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.onSubmit}\r\n          >\r\n            Lưu\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.props.history.push(\"/manager/stations\")}\r\n          >\r\n            Hủy\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stationEditing: state.layout.stationEditing,\r\n    companies: state.companies\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getStationById,\r\n  updateStation,\r\n  getCompanies\r\n})(EditStation);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport { getStationById, deleteStation } from \"../../../Actions/station\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AlertDialog from \"../../Utils/alertDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport classes from '../../Utils/classes.json';\r\n\r\nclass StationById extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      station: {}\r\n    };\r\n  }\r\n\r\n  classes = classes;\r\n\r\n  deleteStation = id => {\r\n    this.props.deleteStation(id);\r\n    this.props.history.push(\"./\");\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const stationId = this.props.match.params.id;\r\n    await this.props.getStationById(stationId);\r\n    await this.setState({\r\n      station: this.props.stationEditing\r\n    });\r\n  };\r\n  render() {\r\n    const { station } = this.state;\r\n    return (\r\n      <Container>\r\n        <Card style={this.classes.card}>\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-evenly\"\r\n              alignItems=\"flex-start\"\r\n            >\r\n              <Grid item md={6}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  style={this.classes.title}\r\n                  gutterBottom\r\n                >\r\n                  {_.get(station, \"name\")}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Địa chỉ : {_.get(station, \"address\")}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Tỉnh : {_.get(station, \"province\")}\r\n                </Typography>\r\n                <ButtonBase style={this.classes.image}>\r\n                  <img\r\n                    style={this.classes.img}\r\n                    alt=\"complex\"\r\n                    src={\r\n                      _.get(station, \"image\")\r\n                        ? _.get(station, \"image\")\r\n                        : \"https://upload.wikimedia.org/wikipedia/vi/1/1a/Nh%C3%A0_ga_b%E1%BA%BFn_xe_mi%E1%BB%81n_%C4%90%C3%B4ng.JPG\"\r\n                    }\r\n                  />\r\n                </ButtonBase>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">\r\n                  Danh sách nhà xe :{\" \"}\r\n                  {_.get(station, \"companies\", []).map((com, index) => {\r\n                    return (\r\n                      <Typography key={index} color=\"textSecondary\">\r\n                        <Link\r\n                          to={`/manager/companies/${com._id}`}\r\n                          style={this.classes.link}\r\n                        >\r\n                          {com.name}\r\n                        </Link>\r\n                      </Typography>\r\n                    );\r\n                  })}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"auto\" }}\r\n              onClick={() => this.props.history.push(\"./\")}\r\n            >\r\n              Trở về\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              onClick={() =>\r\n                this.props.history.push(\r\n                  `/manager/stations/${_.get(station, \"_id\")}/editstation`\r\n                )\r\n              }\r\n            >\r\n              Chỉnh sửa\r\n            </Button>\r\n            <AlertDialog\r\n              id={_.get(station, \"_id\")}\r\n              deleteAction={this.deleteStation}\r\n              type={\"Bến xe\"}\r\n            />\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stationEditing: state.layout.stationEditing\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getStationById, deleteStation })(\r\n  StationById\r\n);\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link, withRouter } from \"react-router-dom\";\r\nimport AlertDialog from \"../../Utils/alertDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport useStyles from '../../Utils/style';\r\n\r\nconst SimpleCard = props => {\r\n  const classes = useStyles();\r\n  const { company } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"flex-start\">\r\n          <Grid item md={6}>\r\n            <Link to={`/manager/companies/${company._id}`} className={classes.title}>\r\n              {company.name}\r\n            </Link>\r\n            <Typography color=\"textPrimary\">\r\n              Loại ghế : {company.carType.join(\", \")}\r\n            </Typography>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" \r\n                src={company.image ? company.image\r\n                 : \"https://chothuexedulichtphcm.vn/wp-content/uploads/2018/05/cho-thue%CC%82-xe-29-cho%CC%82%CC%83-ta%CC%A3i-%C4%90o%CC%82%CC%80ng-Tha%CC%81p-gia%CC%81-re%CC%89.jpg\"} />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <Typography variant=\"h6\" color=\"textPrimary\">\r\n              Danh sách bến xe :{\" \"}\r\n              {company.stations.map((stt, index) => {\r\n                return (\r\n                  <Typography key={index} color=\"textSecondary\">\r\n                    <Link to={`/manager/stations/${stt._id}`} className = {classes.link}>\r\n                    {stt.name}\r\n                    </Link> \r\n                  </Typography>\r\n                );\r\n              })}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          style={{ marginLeft: \"auto\" }}\r\n          onClick={() =>\r\n            props.history.push(`/manager/companies/${company._id}/editcompany`)\r\n          }\r\n        >\r\n          Chỉnh sửa\r\n        </Button>\r\n        <AlertDialog\r\n          id={company._id}\r\n          deleteAction={props.deleteCompany}\r\n          type={\"Nhà xe\"}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withRouter(SimpleCard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCompanies, deleteCompany } from \"../../../Actions/company\";\r\nimport { getStations } from \"../../../Actions/station\";\r\nimport { changeAlias } from \"./../../Utils/changeAlias\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SingleCompany from \"./SingleCompany\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport _ from \"lodash\";\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 300,\r\n      width: 300\r\n    }\r\n  }\r\n};\r\n\r\nconst ListCar = [\r\n  \"Ghế ngồi VIP 8 chỗ\",\r\n  \"Giường nằm VIP 20 chỗ\",\r\n  \"Ghế ngồi thường 16 chỗ\",\r\n  \"Ghế ngồi thường 40 chỗ\"\r\n];\r\n\r\nclass Company extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      companyName: \"\",\r\n      List: [],\r\n      stationsFilter: [],\r\n      carTypeFilter: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getCompanies();\r\n    this.props.getStations().then(() => {\r\n      this.setState({\r\n        List: this.props.stations\r\n      });\r\n    });\r\n  }\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  cancelFilter = () => {\r\n    this.setState({\r\n      stationsFilter: [],\r\n      carTypeFilter: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { companyName, List, stationsFilter, carTypeFilter } = this.state;\r\n\r\n    let searchCompany = [];\r\n    const companies = this.props.companies;\r\n\r\n    // search by company name\r\n    companies.filter(com => {\r\n      let name = changeAlias(com.name);\r\n      if (name.indexOf(changeAlias(companyName)) > -1) {\r\n        searchCompany = [...searchCompany, com];\r\n      }\r\n      return com;\r\n    });\r\n\r\n    // filter by station\r\n    const filterByStation = companies.filter(com =>\r\n      stationsFilter.every(\r\n        stt => com.stations.map(stt => stt._id).indexOf(stt) > -1\r\n      )\r\n    );\r\n\r\n    //filter by CarType\r\n    const filterByCarType = companies.filter(com =>\r\n      carTypeFilter.every(type => com.carType.indexOf(type) > -1)\r\n    );\r\n    const renderCompany = _.intersection(\r\n      searchCompany,\r\n      filterByCarType,\r\n      filterByStation\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <h1 className=\"title_addnew\">QUẢN LÝ NHÀ XE</h1>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() =>\r\n            this.props.history.push(\"/manager/companies/addcompany\")\r\n          }\r\n        >\r\n          Thêm Nhà xe\r\n        </Button>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item md={2}></Grid>\r\n          <Grid item md={3}>\r\n            <Card>\r\n              <h2 className=\"title_addnew\">BỘ LỌC & TÌM KIẾM</h2>\r\n              <h3 className=\"title_addnew\">{`Tổng số kết quả : ${renderCompany.length}`}</h3>\r\n              <Button\r\n                style={{ justifyContent: \"center\" }}\r\n                variant=\"contained\"\r\n                onClick={() => this.cancelFilter()}\r\n              >\r\n                Hủy\r\n              </Button>\r\n              <CardContent>\r\n                <TextField\r\n                  id=\"companyName\"\r\n                  name=\"companyName\"\r\n                  value={companyName}\r\n                  label=\"Tìm nhà xe\"\r\n                  variant=\"outlined\"\r\n                  style={{ margin: \"15px\", width: \"80%\" }}\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormControl style={{  margin: \"15px\", width: \"80%\"  }}>\r\n                  <InputLabel>Bến xe</InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    name=\"stationsFilter\"\r\n                    value={stationsFilter}\r\n                    onChange={this.onChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => (\r\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                        {List.filter(stt => selected.indexOf(stt._id) > -1).map(\r\n                          stt => (\r\n                            <Chip\r\n                              key={stt._id}\r\n                              label={stt.name}\r\n                              style={{ margin: 2 }}\r\n                            />\r\n                          )\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {List.map(station => (\r\n                      <MenuItem key={station._id} value={station._id}>\r\n                        <Checkbox\r\n                          checked={stationsFilter.indexOf(station._id) > -1}\r\n                        />\r\n                        <ListItemText primary={station.name} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl style={{  margin: \"15px\", width: \"80%\"  }}>\r\n                  <InputLabel>Loại ghế ngồi</InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    name=\"carTypeFilter\"\r\n                    value={carTypeFilter}\r\n                    onChange={this.onChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => (\r\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                        {selected.map(value => (\r\n                          <Chip\r\n                            key={value}\r\n                            label={value}\r\n                            style={{ margin: 2 }}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {ListCar.map(car => (\r\n                      <MenuItem key={car} value={car}>\r\n                        <Checkbox checked={carTypeFilter.indexOf(car) > -1} />\r\n                        <ListItemText primary={car} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </CardContent>\r\n              <CardActions></CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={7}>\r\n            {renderCompany.map((company, index) => {\r\n              return (\r\n                <SingleCompany\r\n                  company={company}\r\n                  key={index}\r\n                  deleteCompany={this.props.deleteCompany}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    companies: state.companies,\r\n    stations: state.stations\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCompanies,\r\n  deleteCompany,\r\n  getStations\r\n})(Company);\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { createCompany } from \"../../../Actions/company\";\r\nimport { getStations } from \"../../../Actions/station\";\r\nimport ErrorSnackBar from \"../../Utils/errorSnackBar\";\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 300,\r\n      width: 300\r\n    }\r\n  }\r\n};\r\n\r\nconst ListCar = [\r\n  \"Ghế ngồi VIP 8 chỗ\",\r\n  \"Giường nằm VIP 20 chỗ\",\r\n  \"Ghế ngồi thường 16 chỗ\",\r\n  \"Ghế ngồi thường 40 chỗ\"\r\n];\r\n\r\nclass AddCompany extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      carType: [],\r\n      image: \"\",\r\n      stations: [],\r\n      List: [],\r\n      error: {}\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, carType, stations, image } = this.state;\r\n    const data = { name, carType, stations, image };\r\n    this.props\r\n      .createCompany(data)\r\n      .then(() => this.props.history.push(\"./\"))\r\n      .catch(err => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getStations().then(() => {\r\n      this.setState({ List: this.props.stations });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, carType, stations, image, List } = this.state;\r\n    return (\r\n      <div className=\"add_station\">\r\n        <h1 className=\"title_addnew\">THÊM NHÀ XE</h1>\r\n        <form autoComplete=\"off\" onSubmit={this.onSubmit}>\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.name\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.name\", \"\")}\r\n              />\r\n            )}\r\n            <TextField\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={name}\r\n              label=\"Tên nhà xe\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              id=\"image\"\r\n              name=\"image\"\r\n              value={image}\r\n              label=\"Link hình ảnh\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.carType\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.carType\", \"\")}\r\n              />\r\n            )}\r\n            <FormControl style={{ margin: \"15px\", width: \"40%\" }}>\r\n              <InputLabel>Loại ghế ngồi</InputLabel>\r\n              <Select\r\n                multiple\r\n                name=\"carType\"\r\n                value={carType}\r\n                onChange={this.onChange}\r\n                input={<Input />}\r\n                renderValue={selected => (\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    {selected.map(value => (\r\n                      <Chip key={value} label={value} style={{ margin: 2 }} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {ListCar.map(car => (\r\n                  <MenuItem key={car} value={car}>\r\n                    <Checkbox checked={carType.indexOf(car) > -1} />\r\n                    <ListItemText primary={car} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div>\r\n            <FormControl style={{ margin: \"15px\", width: \"40%\" }}>\r\n              <InputLabel>Chọn bến xe</InputLabel>\r\n              <Select\r\n                multiple\r\n                name=\"stations\"\r\n                value={stations}\r\n                onChange={this.onChange}\r\n                input={<Input />}\r\n                renderValue={selected => (\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    {List.filter(stt => selected.indexOf(stt._id) > -1).map(\r\n                      stt => (\r\n                        <Chip\r\n                          key={stt._id}\r\n                          label={stt.name}\r\n                          style={{ margin: 2 }}\r\n                        />\r\n                      )\r\n                    )}\r\n                  </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {List.map(station => (\r\n                  <MenuItem key={station._id} value={station._id}>\r\n                    <Checkbox checked={stations.indexOf(station._id) > -1} />\r\n                    <ListItemText primary={station.name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.onSubmit}\r\n          >\r\n            Lưu\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.props.history.push(\"./\")}\r\n          >\r\n            Hủy\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stations: state.stations\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createCompany, getStations })(\r\n  AddCompany\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCompanyById, updateCompany } from \"../../../Actions/company\";\r\nimport { getStations } from \"../../../Actions/station\";\r\nimport ErrorSnackBar from \"../../Utils/errorSnackBar\";\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 300,\r\n      width: 300\r\n    }\r\n  }\r\n};\r\n\r\nconst ListCar = [\r\n  \"Ghế ngồi VIP 8 chỗ\",\r\n  \"Giường nằm VIP 20 chỗ\",\r\n  \"Ghế ngồi thường 16 chỗ\",\r\n  \"Ghế ngồi thường 40 chỗ\"\r\n];\r\n\r\nclass EditCompany extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      carType: [],\r\n      image: \"\",\r\n      stations: [],\r\n      List: [],\r\n      error: {},\r\n      _id: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, carType, stations, image, _id } = this.state;\r\n    const data = { name, carType, stations, image, _id };\r\n    this.props\r\n      .updateCompany(data)\r\n      .then(() => this.props.history.push(\"./../\"))\r\n      .catch(err => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const companyId = this.props.match.params.id;\r\n\r\n    this.props.getStations().then(() => {\r\n      this.setState({ List: this.props.stations });\r\n    });\r\n\r\n    this.props.getCompanyById(companyId).then(() => {\r\n      const company = this.props.companyEditing;\r\n      const stationId = company.stations.map(stt => stt._id);\r\n      this.setState({\r\n        name: company.name,\r\n        carType: company.carType,\r\n        stations: stationId,\r\n        image: company.image,\r\n        _id: company._id\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, carType, stations, List, image } = this.state;\r\n    return (\r\n      <div className=\"add_station\">\r\n        <h1 className=\"title_addnew\">CHỈNH SỬA NHÀ XE</h1>\r\n        <form autoComplete=\"off\" onSubmit={this.onSubmit}>\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.name\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.name\", \"\")}\r\n              />\r\n            )}\r\n            <TextField\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={name}\r\n              label=\"Tên nhà xe\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              id=\"image\"\r\n              name=\"image\"\r\n              value={image}\r\n              label=\"Link hình ảnh\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.carType\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.carType\", \"\")}\r\n              />\r\n            )}\r\n            <FormControl style={{ margin: \"15px\", width: \"40%\" }}>\r\n              <InputLabel>Loại ghế ngồi</InputLabel>\r\n              <Select\r\n                multiple\r\n                name=\"carType\"\r\n                value={carType}\r\n                onChange={this.onChange}\r\n                input={<Input />}\r\n                renderValue={selected => (\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    {selected.map(value => (\r\n                      <Chip key={value} label={value} style={{ margin: 2 }} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {ListCar.map(car => (\r\n                  <MenuItem key={car} value={car}>\r\n                    <Checkbox checked={carType.indexOf(car) > -1} />\r\n                    <ListItemText primary={car} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div>\r\n            <FormControl style={{ margin: \"15px\", width: \"40%\" }}>\r\n              <InputLabel>Chọn bến xe</InputLabel>\r\n              <Select\r\n                multiple\r\n                name=\"stations\"\r\n                value={stations}\r\n                onChange={this.onChange}\r\n                input={<Input />}\r\n                renderValue={selected => (\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    {List.filter(stt => selected.indexOf(stt._id) > -1).map(\r\n                      stt => (\r\n                        <Chip\r\n                          key={stt._id}\r\n                          label={stt.name}\r\n                          style={{ margin: 2 }}\r\n                        />\r\n                      )\r\n                    )}\r\n                  </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {List.map(station => (\r\n                  <MenuItem key={station._id} value={station._id}>\r\n                    <Checkbox checked={stations.indexOf(station._id) > -1} />\r\n                    <ListItemText primary={station.name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.onSubmit}\r\n          >\r\n            Lưu\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.props.history.push(\"./../\")}\r\n          >\r\n            Hủy\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    companyEditing: state.layout.companyEditing,\r\n    stations: state.stations\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getStations,\r\n  getCompanyById,\r\n  updateCompany\r\n})(EditCompany);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport { getCompanyById, deleteCompany } from \"../../../Actions/company\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AlertDialog from \"../../Utils/alertDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport classes from '../../Utils/classes.json';\r\n\r\nclass CompanyById extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      company: {}\r\n    };\r\n  }\r\n\r\n  classes = classes\r\n\r\n  deleteCompany = (id) => {\r\n    this.props.deleteCompany(id);\r\n    this.props.history.push('./')\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const companyId = this.props.match.params.id;\r\n    await this.props.getCompanyById(companyId);\r\n    await this.setState({\r\n        company: this.props.companyEditing\r\n    });\r\n  };\r\n  render() {\r\n    const { company } = this.state;\r\n    return (\r\n      <Container>\r\n      <Card style={this.classes.card}>\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Grid item md={6}>\r\n              <Typography variant=\"h5\" style={this.classes.title} gutterBottom>\r\n                {_.get(company, \"name\")}\r\n              </Typography>\r\n              <Typography color=\"textPrimary\">\r\n                Loại ghế : {_.get(company, \"carType\", []).join(\", \")}\r\n              </Typography>\r\n              <ButtonBase style={this.classes.image}>\r\n                <img\r\n                  style={this.classes.img}\r\n                  alt=\"complex\"\r\n                  src={\r\n                    _.get(company, \"image\")\r\n                      ? _.get(company, \"image\")\r\n                      : \"https://chothuexedulichtphcm.vn/wp-content/uploads/2018/05/cho-thue%CC%82-xe-29-cho%CC%82%CC%83-ta%CC%A3i-%C4%90o%CC%82%CC%80ng-Tha%CC%81p-gia%CC%81-re%CC%89.jpg\"\r\n                  }\r\n                />\r\n              </ButtonBase>\r\n            </Grid>\r\n            <Grid item md={6} >\r\n            <Typography variant=\"h6\" color=\"textPrimary\">\r\n              Danh sách bến xe :{\" \"}\r\n              {_.get(company, \"stations\", []).map((stt, index) => {\r\n                return (\r\n                  <Typography key={index} color=\"textSecondary\">\r\n                    <Link to={`/manager/stations/${stt._id}`} style = {this.classes.link}>\r\n                    {stt.name}\r\n                    </Link> \r\n                  </Typography>\r\n                );\r\n              })}\r\n            </Typography>\r\n          </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ marginLeft: \"auto\" }}\r\n            onClick={() => this.props.history.push(\"./\")}\r\n          >\r\n            Trở về\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            onClick={() =>\r\n              this.props.history.push(\r\n                `/manager/companies/${_.get(company, \"_id\")}/editcompany`\r\n              )\r\n            }\r\n          >\r\n            Chỉnh sửa\r\n          </Button>\r\n          <AlertDialog\r\n            id={_.get(company, \"_id\")}\r\n            deleteAction={this.deleteCompany}\r\n            type={\"Nhà xe\"}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    companyEditing: state.layout.companyEditing\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getCompanyById, deleteCompany })(CompanyById);\r\n","import api from '../Api';\r\nimport * as types from './actionConstant';\r\n\r\nexport const getTrips = () => (dispatch) => {\r\n    return api.get('/trips')\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.GET_TRIPS,\r\n                payload: res.data\r\n            })\r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const getTripById = (id) => (dispatch) => {\r\n    return api.get(`/trips/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.GET_TRIPBYID,\r\n                payload: res.data\r\n            });\r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const getTripByIdClient = (id) => (dispatch) => {\r\n    return api.get(`/trips/${id}`)\r\n        .then(res => {\r\n            dispatch({ type: types.GET_TRIPBYID, payload: res.data });\r\n            Promise.resolve(res.data);\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const createTrip = (data) => (dispatch) => {\r\n    return api.post('/trips', data)\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.CREATE_TRIP,\r\n                payload: res.data  //object\r\n            })\r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const updateTrip = (data) => (dispatch) => {\r\n    return api.put(`/trips/${data._id}`, data)\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.UPDATE_TRIP,\r\n                payload: res.data\r\n            })\r\n            Promise.resolve(res.data)\r\n        })\r\n        .catch(err => Promise.reject(err))\r\n}\r\n\r\nexport const deleteTrip = (id) => (dispatch) => {\r\n    api.delete(`/trips/${id}`)\r\n    .then(() => {\r\n        dispatch(getTrips())\r\n    })\r\n}","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport AlertDialog from \"../../Utils/alertDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Moment from \"react-moment\";\r\nimport useStyles from '../../Utils/style';\r\n\r\nconst SimpleCard = props => {\r\n  const classes = useStyles();\r\n  const { trip } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item md={6}>\r\n            <Link to={`/manager/trips/${trip._id}`} className={classes.title}>\r\n              {trip.fromStation.province} - {trip.toStation.province}\r\n            </Link>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              <Link\r\n                to={`/manager/companies/${trip.company._id}`}\r\n                className={classes.link}\r\n              >\r\n                {trip.company.name}\r\n              </Link>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{trip.carType}</Typography>\r\n            <ButtonBase className={classes.image}>\r\n              <img\r\n                className={classes.img}\r\n                alt=\"complex\"\r\n                src={\r\n                  trip.company.image\r\n                    ? trip.company.image\r\n                    : \"https://upload.wikimedia.org/wikipedia/vi/1/1a/Nh%C3%A0_ga_b%E1%BA%BFn_xe_mi%E1%BB%81n_%C4%90%C3%B4ng.JPG\"\r\n                }\r\n              />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n          <Typography variant=\"h6\" color=\"primary\">\r\n              Giá vé :{\" \"}\r\n              <NumberFormat\r\n                value={trip.price}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                suffix={\" VND\"}\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textPrimary\">\r\n              Điểm xuất phát :{\" \"}\r\n              <Link\r\n                to={`/manager/stations/${trip.fromStation._id}`}\r\n                className={classes.link}\r\n              >\r\n                {trip.fromStation.name}\r\n              </Link>\r\n            </Typography>\r\n            <Typography color=\"textPrimary\">\r\n              Điểm đến :{\" \"}\r\n              <Link\r\n                to={`/manager/stations/${trip.toStation._id}`}\r\n                className={classes.link}\r\n              >\r\n                {trip.toStation.name}\r\n              </Link>\r\n            </Typography>\r\n            \r\n            <Typography color=\"textPrimary\">\r\n              Giờ khởi hành:{\" \"}\r\n              <Moment format=\" HH:mm DD/MM/YYYY\">{trip.startTime}</Moment>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Số ghế trống: {trip.seats.filter(e => !e.isBooked).length} /{\" \"}\r\n              {trip.seats.length}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          style={{ marginLeft: \"auto\" }}\r\n          onClick={() =>\r\n            props.history.push(`/manager/trips/${trip._id}/edittrip`)\r\n          }\r\n        >\r\n          Chỉnh sửa\r\n        </Button>\r\n        <AlertDialog\r\n          id={trip._id}\r\n          deleteAction={props.deleteTrip}\r\n          type={\"Chuyến đi\"}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withRouter(SimpleCard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTrips, deleteTrip } from \"../../../Actions/trip\";\r\nimport { getStations } from \"../../../Actions/station\";\r\nimport { getCompanies } from \"../../../Actions/company\";\r\nimport SingleTrip from \"./SingleTrip\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { changeAlias } from \"./../../Utils/changeAlias\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport _ from \"lodash\";\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 300,\r\n      width: 300\r\n    }\r\n  }\r\n};\r\n\r\nclass Trip extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tripName: \"\",\r\n      companiesList: [],\r\n      stationsList: [],\r\n      provinceList: [],\r\n      companiesFilter: [],\r\n      fromStationFilter: [],\r\n      fromProvinceFilter: [],\r\n      toStationFilter: [],\r\n      toProvinceFilter: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTrips();\r\n    this.props.getCompanies().then(() => {\r\n      this.setState({\r\n        companiesList: this.props.companies\r\n      });\r\n    });\r\n    this.props.getStations().then(() => {\r\n      this.setState({\r\n        stationsList: this.props.stations,\r\n        provinceList: _.uniq(this.props.stations.map(stt => stt.province))\r\n      });\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  cancelFilter = () => {\r\n    this.setState({\r\n      companiesFilter: [],\r\n      fromStationFilter: [],\r\n      fromProvinceFilter: [],\r\n      toStationFilter: [],\r\n      toProvinceFilter: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      tripName,\r\n      companiesList,\r\n      stationsList,\r\n      provinceList,\r\n      companiesFilter,\r\n      fromStationFilter,\r\n      toStationFilter,\r\n      fromProvinceFilter,\r\n      toProvinceFilter\r\n    } = this.state;\r\n\r\n    // search by Trip name\r\n    const trips = this.props.trips;\r\n\r\n    let searchTrip = [];\r\n    if (tripName) {\r\n      trips.filter(trip => {\r\n        let name =\r\n          changeAlias(trip.fromStation.province) +\r\n          changeAlias(trip.toStation.province);\r\n        if (name.indexOf(changeAlias(tripName)) > -1) {\r\n          searchTrip = [...searchTrip, trip];\r\n        }\r\n        return trip;\r\n      });\r\n    } else {\r\n      searchTrip = trips;\r\n    }\r\n\r\n    // filter by company\r\n    let filterByCompany = [];\r\n    if (companiesFilter.length > 0) {\r\n      filterByCompany = trips.filter(\r\n        trip => companiesFilter.indexOf(trip.company._id) > -1\r\n      );\r\n    } else {\r\n      filterByCompany = trips;\r\n    }\r\n\r\n    // filter by from province\r\n    let filterByFromProvince = [];\r\n    if (fromProvinceFilter.length > 0) {\r\n      filterByFromProvince = trips.filter(\r\n        trip => fromProvinceFilter.indexOf(trip.fromStation.province) > -1\r\n      );\r\n    } else {\r\n      filterByFromProvince = trips;\r\n    }\r\n\r\n    // filter by to province\r\n    let filterByToProvince = [];\r\n    if (toProvinceFilter.length > 0) {\r\n      filterByToProvince = trips.filter(\r\n        trip => toProvinceFilter.indexOf(trip.toStation.province) > -1\r\n      );\r\n    } else {\r\n      filterByToProvince = trips;\r\n    }\r\n\r\n    // filter by from station\r\n    let filterByFromStation = [];\r\n    if (fromStationFilter.length > 0) {\r\n      filterByFromStation = trips.filter(\r\n        trip => fromStationFilter.indexOf(trip.fromStation._id) > -1\r\n      );\r\n    } else {\r\n      filterByFromStation = trips;\r\n    }\r\n\r\n    // filter by to station\r\n    let filterByToStation = [];\r\n    if (toStationFilter.length > 0) {\r\n      filterByToStation = trips.filter(\r\n        trip => toStationFilter.indexOf(trip.toStation._id) > -1\r\n      );\r\n    } else {\r\n      filterByToStation = trips;\r\n    }\r\n\r\n    const renderTrip = _.intersection(\r\n      searchTrip,\r\n      filterByCompany,\r\n      filterByFromProvince,\r\n      filterByToProvince,\r\n      filterByFromStation,\r\n      filterByToStation\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <h1 className=\"title_addnew\">QUẢN LÝ CHUYẾN ĐI</h1>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => this.props.history.push(\"/manager/trips/addtrip\")}\r\n        >\r\n          Thêm chuyến đi\r\n        </Button>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item md={2}></Grid>\r\n          <Grid item md={3}>\r\n            <Card>\r\n              <h2 className=\"title_addnew\">BỘ LỌC & TÌM KIẾM</h2>\r\n              <h3 className=\"title_addnew\">{`Tổng số kết quả : ${renderTrip.length}`}</h3>\r\n\r\n              <Button\r\n                style={{ justifyContent: \"center\" }}\r\n                variant=\"contained\"\r\n                onClick={() => this.cancelFilter()}\r\n              >\r\n                Hủy\r\n              </Button>\r\n              <CardContent>\r\n                <TextField\r\n                  id=\"tripName\"\r\n                  name=\"tripName\"\r\n                  value={tripName}\r\n                  label=\"Tìm chuyến đi\"\r\n                  variant=\"outlined\"\r\n                  style={{ margin: \"15px\", width: \"80%\" }}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                  <InputLabel>Nhà xe</InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    name=\"companiesFilter\"\r\n                    value={companiesFilter}\r\n                    onChange={this.onChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => (\r\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                        {companiesList\r\n                          .filter(com => selected.indexOf(com._id) > -1)\r\n                          .map(com => (\r\n                            <Chip\r\n                              key={com._id}\r\n                              label={com.name}\r\n                              style={{ margin: 2 }}\r\n                            />\r\n                          ))}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {companiesList.map(company => (\r\n                      <MenuItem key={company._id} value={company._id}>\r\n                        <Checkbox\r\n                          checked={companiesFilter.indexOf(company._id) > -1}\r\n                        />\r\n                        <ListItemText primary={company.name} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                  <InputLabel>Nơi đi</InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    name=\"fromProvinceFilter\"\r\n                    value={fromProvinceFilter}\r\n                    onChange={this.onChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => (\r\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                        {selected.map(value => (\r\n                          <Chip\r\n                            key={value}\r\n                            label={value}\r\n                            style={{ margin: 2 }}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {provinceList.map(province => (\r\n                      <MenuItem key={province} value={province}>\r\n                        <Checkbox\r\n                          checked={fromProvinceFilter.indexOf(province) > -1}\r\n                        />\r\n                        <ListItemText primary={province} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                  <InputLabel>Nơi đến</InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    name=\"toProvinceFilter\"\r\n                    value={toProvinceFilter}\r\n                    onChange={this.onChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => (\r\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                        {selected.map(value => (\r\n                          <Chip\r\n                            key={value}\r\n                            label={value}\r\n                            style={{ margin: 2 }}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {provinceList.map(province => (\r\n                      <MenuItem key={province} value={province}>\r\n                        <Checkbox\r\n                          checked={toProvinceFilter.indexOf(province) > -1}\r\n                        />\r\n                        <ListItemText primary={province} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                  <InputLabel>Điểm đón khách</InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    name=\"fromStationFilter\"\r\n                    value={fromStationFilter}\r\n                    onChange={this.onChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => (\r\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                        {stationsList\r\n                          .filter(stt => selected.indexOf(stt._id) > -1)\r\n                          .map(stt => (\r\n                            <Chip\r\n                              key={stt._id}\r\n                              label={stt.name}\r\n                              style={{ margin: 2 }}\r\n                            />\r\n                          ))}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {stationsList.map(station => (\r\n                      <MenuItem key={station._id} value={station._id}>\r\n                        <Checkbox\r\n                          checked={fromStationFilter.indexOf(station._id) > -1}\r\n                        />\r\n                        <ListItemText primary={station.name} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                  <InputLabel>Điểm trả khách</InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    name=\"toStationFilter\"\r\n                    value={toStationFilter}\r\n                    onChange={this.onChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => (\r\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                        {stationsList\r\n                          .filter(stt => selected.indexOf(stt._id) > -1)\r\n                          .map(stt => (\r\n                            <Chip\r\n                              key={stt._id}\r\n                              label={stt.name}\r\n                              style={{ margin: 2 }}\r\n                            />\r\n                          ))}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {stationsList.map(station => (\r\n                      <MenuItem key={station._id} value={station._id}>\r\n                        <Checkbox\r\n                          checked={toStationFilter.indexOf(station._id) > -1}\r\n                        />\r\n                        <ListItemText primary={station.name} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={7}>\r\n            {renderTrip\r\n              .sort((a, b) => new Date(a.startTime) - new Date(b.startTime))\r\n              .map((trip, index) => {\r\n                return (\r\n                  <SingleTrip\r\n                    trip={trip}\r\n                    key={index}\r\n                    deleteTrip={this.props.deleteTrip}\r\n                  />\r\n                );\r\n              })}\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    trips: state.trips,\r\n    stations: state.stations,\r\n    companies: state.companies\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getTrips,\r\n  deleteTrip,\r\n  getStations,\r\n  getCompanies\r\n})(Trip);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport { getTripById, deleteTrip } from \"../../../Actions/trip\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AlertDialog from \"../../Utils/alertDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Moment from \"react-moment\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport classes from '../../Utils/classes.json';\r\n\r\nclass TripById extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trip: {}\r\n    };\r\n  }\r\n\r\n  classes = classes;\r\n\r\n  deleteTrip = id => {\r\n    this.props.deleteTrip(id);\r\n    this.props.history.push(\"./\");\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const tripId = this.props.match.params.id;\r\n    await this.props.getTripById(tripId);\r\n    await this.setState({\r\n      trip: this.props.tripEditing\r\n    });\r\n  };\r\n  render() {\r\n    const { trip } = this.state;\r\n    return (\r\n      <Container>\r\n        <Card style={this.classes.card}>\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-evenly\"\r\n              alignItems=\"flex-start\"\r\n            >\r\n              <Grid item md={8}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  style={this.classes.title}\r\n                  gutterBottom\r\n                >\r\n                  {_.get(trip, \"fromStation.province\")} -{\" \"}\r\n                  {_.get(trip, \"toStation.province\")}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  <Link\r\n                    to={`/manager/companies/${_.get(trip, \"company._id\")}`}\r\n                    style={this.classes.link}\r\n                  >\r\n                    {_.get(trip, \"company.name\")}\r\n                  </Link>\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {_.get(trip, \"carType\")}\r\n                </Typography>\r\n                <ButtonBase style={this.classes.image}>\r\n                  <img\r\n                    style={this.classes.img}\r\n                    alt=\"complex\"\r\n                    src={\r\n                      _.get(trip, \"company.image\")\r\n                        ? _.get(trip, \"company.image\")\r\n                        : \"https://upload.wikimedia.org/wikipedia/vi/1/1a/Nh%C3%A0_ga_b%E1%BA%BFn_xe_mi%E1%BB%81n_%C4%90%C3%B4ng.JPG\"\r\n                    }\r\n                  />\r\n                </ButtonBase>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Typography color=\"textPrimary\">\r\n                  Điểm xuất phát :{\" \"}\r\n                  <Link\r\n                    to={`/manager/stations/${_.get(trip, \"fromStation._id\")}`}\r\n                    style={this.classes.link}\r\n                  >\r\n                    {_.get(trip, \"fromStation.name\")}\r\n                  </Link>\r\n                </Typography>\r\n                <Typography color=\"textPrimary\">\r\n                  Điểm đến :{\" \"}\r\n                  <Link\r\n                    to={`/manager/stations/${_.get(trip, \"toStation._id\")}`}\r\n                    style={this.classes.link}\r\n                  >\r\n                    {_.get(trip, \"toStation.name\")}\r\n                  </Link>\r\n                </Typography>\r\n                <Typography color=\"textPrimary\">\r\n                  Giá vé :{\" \"}\r\n                  <NumberFormat\r\n                    value={_.get(trip, \"price\")}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    suffix={\" VND\"}\r\n                  />\r\n                </Typography>\r\n                <Typography color=\"textPrimary\">\r\n                  Giờ khởi hành:{\" \"}\r\n                  <Moment format=\" HH:mm DD/MM/YYYY\">\r\n                    {_.get(trip, \"startTime\")}\r\n                  </Moment>\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Số ghế trống:{\" \"}\r\n                  {_.get(trip, \"seats\", []).filter(e => !e.isBooked).length} /{\" \"}\r\n                  {_.get(trip, \"seats\", []).length}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Ghế trống:{\" \"}\r\n                  {_.get(trip, \"seats\", [])\r\n                    .filter(e => !e.isBooked)\r\n                    .map(e => e.code)\r\n                    .join(\", \")}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"auto\" }}\r\n              onClick={() => this.props.history.push(\"./\")}\r\n            >\r\n              Trở về\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              onClick={() =>\r\n                this.props.history.push(\r\n                  `/manager/trips/${_.get(trip, \"_id\")}/edittrip`\r\n                )\r\n              }\r\n            >\r\n              Chỉnh sửa\r\n            </Button>\r\n            <AlertDialog\r\n              id={_.get(trip, \"_id\")}\r\n              deleteAction={this.deleteTrip}\r\n              type={\"Chuyến đi\"}\r\n            />\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tripEditing: state.layout.tripEditing\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getTripById, deleteTrip })(TripById);\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';   //npm i --save date-fns@next @date-io/date-fns\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';   //npm i @material-ui/pickers\r\n\r\nexport default function TimePicker(props) {\r\n  const nowTime = new Date ();\r\n  const startTime = props.startTime || nowTime;\r\n  const [selectedDate, setSelectedDate] = React.useState(startTime);\r\n\r\n  React.useEffect( () => {\r\n    if (props.startTime ) {\r\n      setSelectedDate(startTime);\r\n    }\r\n}, [props.startTime, startTime])\r\n\r\n  const handleDateChange = date => {\r\n    setSelectedDate(date);\r\n    props.onChange(date);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"center\">\r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Chọn ngày\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Chọn giờ\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { createTrip } from \"../../../Actions/trip\";\r\nimport { getAdviseCompany } from \"../../../Actions/company\";\r\nimport { getStations } from \"../../../Actions/station\";\r\nimport ErrorSnackBar from \"../../Utils/errorSnackBar\";\r\nimport TimePicker from './TimePicker';\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 300,\r\n      width: 300\r\n    }\r\n  }\r\n};\r\n\r\nclass AddTrip extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stationList: [],\r\n      fromStation: \"\",\r\n      toStation: \"\",\r\n      adviceCompany: [],\r\n      company: \"\",\r\n      ListCar: [],\r\n      carType: \"\",\r\n      startTime: \"\",\r\n      price: \"\",\r\n      error: {}\r\n    };\r\n  }\r\n\r\n  onChangeStation = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    }, () => {\r\n      if (this.state.fromStation && this.state.toStation) {\r\n        const {fromStation, toStation} = this.state;\r\n        const data = {fromStation, toStation};\r\n        this.props\r\n          .getAdviseCompany(data)\r\n          .then(() =>\r\n            this.setState({\r\n              adviceCompany: this.props.adviceCompany,\r\n              company: \"\",\r\n              carType: \"\"\r\n            })\r\n          )\r\n          .catch(err => console.log(err));\r\n      };\r\n    });\r\n  };\r\n\r\n  onChangeCompany = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    } , () => {\r\n      let company = this.state.adviceCompany.find(c => c._id === this.state.company);\r\n      this.setState({ ListCar: company.carType, carType: \"\" });\r\n    })\r\n  }\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDate = (date) => {\r\n    this.setState({startTime : date})\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { fromStation, toStation, company, carType, price, startTime } = this.state;\r\n    const data = { fromStation, toStation, company, carType, price, startTime };\r\n    this.props\r\n      .createTrip(data)\r\n      .then(() => this.props.history.push(\"./\"))\r\n      .catch(err => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getStations().then(() => {\r\n      this.setState({ stationList: this.props.stations });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      stationList,\r\n      fromStation,\r\n      toStation,\r\n      adviceCompany,\r\n      company,\r\n      ListCar,\r\n      carType,\r\n      price\r\n    } = this.state;\r\n    return (\r\n      <div className=\"add_station\">\r\n        <h1 className=\"title_addnew\">Thêm chuyến đi</h1>\r\n        <form autoComplete=\"off\" onSubmit={this.onSubmit}>\r\n          <div>\r\n          {_.get(this.state, \"error.response.data.fromStation\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.fromStation\", \"\")}\r\n              />\r\n            )}\r\n            <FormControl style={{  margin: \"15px\", width: \"30%\" }}>\r\n              <InputLabel>Điểm xuất phát</InputLabel>\r\n              <Select\r\n                name=\"fromStation\"\r\n                value={fromStation}\r\n                onChange={this.onChangeStation}\r\n                input={<Input />}\r\n                renderValue={selected => {\r\n                  const stt = stationList.find(stt => stt._id === selected);\r\n                  return stt.name;\r\n                }}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {stationList.map(station => (\r\n                  <MenuItem key={station._id} value={station._id}>\r\n                    <Checkbox checked={fromStation === station._id} />\r\n                    <ListItemText primary={station.name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div>\r\n          {_.get(this.state, \"error.response.data.toStation\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.toStation\", \"\")}\r\n              />\r\n            )}\r\n            <FormControl style={{  margin: \"15px\", width: \"30%\" }}>\r\n              <InputLabel>Điểm đến</InputLabel>\r\n              <Select\r\n                name=\"toStation\"\r\n                value={toStation}\r\n                onChange={this.onChangeStation}\r\n                input={<Input />}\r\n                renderValue={selected => {\r\n                  const stt = stationList.find(stt => stt._id === selected);\r\n                  return stt.name;\r\n                }}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {stationList.map(station => (\r\n                  <MenuItem key={station._id} value={station._id}>\r\n                    <Checkbox checked={toStation === station._id} />\r\n                    <ListItemText primary={station.name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div>\r\n          {_.get(this.state, \"error.response.data.company\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.company\", \"\")}\r\n              />\r\n            )}\r\n            <FormControl style={{  margin: \"15px\", width: \"30%\" }}>\r\n              <InputLabel>Nhà xe</InputLabel>\r\n              <Select\r\n                name=\"company\"\r\n                value={company}\r\n                onChange={this.onChangeCompany}\r\n                input={<Input />}\r\n                renderValue={selected => {\r\n                  const com = adviceCompany.find(com => com._id === selected);\r\n                  return com.name;\r\n                }}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {adviceCompany.map(com => (\r\n                  <MenuItem key={com._id} value={com._id}>\r\n                    <Checkbox checked={company === com._id} />\r\n                    <ListItemText primary={com.name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n\r\n          {_.get(this.state, \"error.response.data.carType\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.carType\", \"\")}\r\n              />\r\n            )}\r\n            <FormControl style={{  margin: \"15px\", width: \"30%\" }}>\r\n              <InputLabel>Loại ghế ngồi</InputLabel>\r\n              <Select\r\n                name=\"carType\"\r\n                value={carType}\r\n                onChange={this.onChange}\r\n                input={<Input />}\r\n                renderValue={selected => selected}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {ListCar.map(car => (\r\n                  <MenuItem key={car} value={car}>\r\n                    <Checkbox checked={carType === car} />\r\n                    <ListItemText primary={car} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.price\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.price\", \"\")}\r\n              />\r\n            )}\r\n            <TextField\r\n              id=\"price\"\r\n              name=\"price\"\r\n              value={price}\r\n              label=\"Giá vé\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"30%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          \r\n          <TimePicker onChange={date => this.onChangeDate(date)}/>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.onSubmit}\r\n          >\r\n            Lưu\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.props.history.push(\"./\")}\r\n          >\r\n            Hủy\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stations: state.stations,\r\n    adviceCompany: state.layout.adviceCompany\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  createTrip,\r\n  getStations,\r\n  getAdviseCompany\r\n})(AddTrip);\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAdviseCompany } from \"../../../Actions/company\";\r\nimport { updateTrip, getTripById } from \"../../../Actions/trip\";\r\nimport { getStations } from \"../../../Actions/station\";\r\nimport ErrorSnackBar from \"../../Utils/errorSnackBar\";\r\nimport TimePicker from \"./TimePicker\";\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 300,\r\n      width: 300\r\n    }\r\n  }\r\n};\r\n\r\nclass EditTrip extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stationList: [],\r\n      fromStation: \"\",\r\n      toStation: \"\",\r\n      adviceCompany: [],\r\n      company: \"\",\r\n      ListCar: [],\r\n      carType: \"\",\r\n      startTime: \"\",\r\n      price: \"\",\r\n      error: {},\r\n      _id: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeStation = e => {\r\n    this.setState(\r\n      {\r\n        [e.target.name]: e.target.value\r\n      },\r\n      () => {\r\n        if (this.state.fromStation && this.state.toStation) {\r\n          const { fromStation, toStation } = this.state;\r\n          const data = { fromStation, toStation };\r\n          this.props\r\n            .getAdviseCompany(data)\r\n            .then(() =>\r\n              this.setState({\r\n                adviceCompany: this.props.adviceCompany,\r\n                company: \"\",\r\n                carType: \"\"\r\n              })\r\n            )\r\n            .catch(err => console.log(err));\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  onChangeCompany = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    } , () => {\r\n      let company = this.state.adviceCompany.find(c => c._id === this.state.company);\r\n      this.setState({ ListCar: company.carType, carType: \"\" });\r\n    })\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onChangeDate = date => {\r\n    this.setState({ startTime: date });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      fromStation,\r\n      toStation,\r\n      company,\r\n      carType,\r\n      price,\r\n      startTime,\r\n      _id\r\n    } = this.state;\r\n    const data = {\r\n      fromStation,\r\n      toStation,\r\n      company,\r\n      carType,\r\n      price,\r\n      startTime,\r\n      _id\r\n    };\r\n    this.props\r\n      .updateTrip(data)\r\n      .then(() => this.props.history.push(\"./../\"))\r\n      .catch(err => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const tripId = this.props.match.params.id;\r\n    await this.props.getStations();\r\n    await this.props.getTripById(tripId);\r\n    const stationList = this.props.stations;\r\n    const trip = this.props.tripEditing;\r\n    const fromStation = trip.fromStation._id;\r\n    const toStation = trip.toStation._id;\r\n    const data = { fromStation, toStation };\r\n    await this.props.getAdviseCompany(data);\r\n    const adviceCompany = this.props.adviceCompany;\r\n    const companyOfTrip = adviceCompany.find(c => c._id === trip.company._id);\r\n    await this.setState({\r\n      stationList: stationList,\r\n      adviceCompany: adviceCompany,\r\n      fromStation: fromStation,\r\n      toStation: toStation,\r\n      company: trip.company._id,\r\n      ListCar: companyOfTrip.carType,\r\n      carType: trip.carType,\r\n      price: trip.price,\r\n      startTime: trip.startTime,\r\n      _id: tripId\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      stationList,\r\n      fromStation,\r\n      toStation,\r\n      adviceCompany,\r\n      company,\r\n      ListCar,\r\n      carType,\r\n      price\r\n    } = this.state;\r\n    const startTime = this.props.tripEditing.startTime\r\n    return (\r\n      <div className=\"add_station\">\r\n        <h1 className=\"title_addnew\">Chỉnh sửa chuyến đi</h1>\r\n        <form autoComplete=\"off\" onSubmit={this.onSubmit}>\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.fromStation\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.fromStation\", \"\")}\r\n              />\r\n            )}\r\n            <FormControl style={{  margin: \"15px\", width: \"30%\" }}>\r\n              <InputLabel>Điểm xuất phát</InputLabel>\r\n              <Select\r\n                name=\"fromStation\"\r\n                value={fromStation}\r\n                onChange={this.onChangeStation}\r\n                input={<Input />}\r\n                renderValue={selected => {\r\n                    const stt = stationList.find(stt => stt._id === fromStation);\r\n                    return stt.name;\r\n                }}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {stationList.map(station => (\r\n                  <MenuItem key={station._id} value={station._id}>\r\n                    <Checkbox checked={fromStation === station._id} />\r\n                    <ListItemText primary={station.name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.toStation\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.toStation\", \"\")}\r\n              />\r\n            )}\r\n            <FormControl style={{  margin: \"15px\", width: \"30%\" }}>\r\n              <InputLabel>Điểm đến</InputLabel>\r\n              <Select\r\n                name=\"toStation\"\r\n                value={toStation}\r\n                onChange={this.onChangeStation}\r\n                input={<Input />}\r\n                renderValue={selected => {\r\n                  const stt = stationList.find(stt => stt._id === selected);\r\n                  return stt.name;\r\n                }}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {stationList.map(station => (\r\n                  <MenuItem key={station._id} value={station._id}>\r\n                    <Checkbox checked={toStation === station._id} />\r\n                    <ListItemText primary={station.name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.company\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.company\", \"\")}\r\n              />\r\n            )}\r\n            <FormControl style={{  margin: \"15px\", width: \"30%\" }}>\r\n              <InputLabel>Nhà xe</InputLabel>\r\n              <Select\r\n                name=\"company\"\r\n                value={company}\r\n                onChange={this.onChangeCompany}\r\n                input={<Input />}\r\n                renderValue={selected => {\r\n                  const com = adviceCompany.find(com => com._id === selected);\r\n                  return com.name;\r\n                }}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {adviceCompany.map(com => (\r\n                  <MenuItem key={com._id} value={com._id}>\r\n                    <Checkbox checked={company.indexOf(com._id) > -1} />\r\n                    <ListItemText primary={com.name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.carType\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.carType\", \"\")}\r\n              />\r\n            )}\r\n            <FormControl style={{  margin: \"15px\", width: \"30%\" }}>\r\n              <InputLabel>Loại ghế ngồi</InputLabel>\r\n              <Select\r\n                name=\"carType\"\r\n                value={carType}\r\n                onChange={this.onChange}\r\n                input={<Input />}\r\n                renderValue={selected => selected}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {ListCar.map(car => (\r\n                  <MenuItem key={car} value={car}>\r\n                    <Checkbox checked={carType === car} />\r\n                    <ListItemText primary={car} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div>\r\n            {_.get(this.state, \"error.response.data.price\") && (\r\n              <ErrorSnackBar\r\n                error={_.get(this.state, \"error.response.data.price\", \"\")}\r\n              />\r\n            )}\r\n            <TextField\r\n              id=\"price\"\r\n              name=\"price\"\r\n              value={price}\r\n              label=\"Giá vé\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"30%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n\r\n          <TimePicker onChange={date => this.onChangeDate(date)} startTime={startTime}/>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.onSubmit}\r\n          >\r\n            Lưu\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ margin: \"15px\" }}\r\n            onClick={() => this.props.history.push(\"./../\")}\r\n          >\r\n            Hủy\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stations: state.stations,\r\n    adviceCompany: state.layout.adviceCompany,\r\n    tripEditing: state.layout.tripEditing\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getStations,\r\n  getAdviseCompany,\r\n  updateTrip,\r\n  getTripById\r\n})(EditTrip);\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AlertDialog from \"./../../Utils/alertDialog\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport useStyles from \"../../Utils/style\";\r\n\r\nexport default function SimpleCard(props) {\r\n  const classes = useStyles();\r\n  const { ticket } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item md={6} className=\"content__grid\">\r\n            <Typography variant=\"h6\" color=\"textSecondary\">\r\n              Mã số vé:\r\n              <Link\r\n                to={`/manager/tickets/${ticket._id}`}\r\n                className={classes.link}\r\n              >\r\n                {_.get(ticket, \"_id\", \"Khác\")}\r\n              </Link>\r\n            </Typography>\r\n            <Link\r\n              to={`/manager/users/${ticket.userId._id}`}\r\n              className={classes.link}\r\n              color=\"textPrimary\"\r\n            >\r\n              Người đặt vé: {_.get(ticket, \"userId.fullName\", \"Khác\")}\r\n            </Link>\r\n            <Typography style={{ marginTop: \"16px\" }} color=\"textPrimary\">\r\n              Số điện thoại : {_.get(ticket, \"phone\", \"\")}\r\n            </Typography>\r\n            <Typography color=\"textPrimary\">\r\n              Địa chỉ : {_.get(ticket, \"address\", \"\")}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={6} className=\"content__grid\">\r\n            <Typography variant=\"h6\" color=\"textSecondary\">\r\n              Mã số ghế: {ticket.seats.map(seat => seat.code).join(\", \")}\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"secondary\">\r\n              Tiền vé :{\" \"}\r\n              <NumberFormat\r\n                value={ticket.totalPrice}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                suffix={\" VND\"}\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textPrimary\">\r\n              Ghi chú : {ticket.note ? ticket.note : \"\"}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <div style={{ marginLeft: \"auto\" }}>\r\n          <AlertDialog\r\n            id={ticket._id}\r\n            deleteAction={props.deleteTicket}\r\n            type={\"Vé\"}\r\n          />\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getTickets, deleteTicket} from '../../../Actions/ticket';\r\nimport SingleTicket from './SingleTicket';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass Ticket extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getTickets()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"md\">\r\n              <h1 className=\"title_addnew\">QUẢN LÝ VÉ XE</h1>\r\n                {this.props.tickets.map((ticket, index) => {\r\n                    return (\r\n                    <SingleTicket ticket={ticket} key= {index} deleteTicket={this.props.deleteTicket} />\r\n                    )\r\n                })}\r\n              \r\n            </Container>\r\n          </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tickets: state.tickets\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getTickets, deleteTicket})(Ticket)","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getTicketById, deleteTicket } from \"../../../Actions/ticket\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AlertDialog from \"../../Utils/alertDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Moment from \"react-moment\";\r\nimport classes from '../../Utils/classes.json';\r\n\r\nclass TicketById extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticket: {}\r\n    };\r\n  }\r\n  classes = classes;\r\n\r\n  deleteTicket = id => {\r\n    this.props.deleteTicket(id);\r\n    this.props.history.push(\"./\");\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const ticketId = this.props.match.params.id;\r\n    await this.props.getTicketById(ticketId);\r\n    await this.setState({\r\n      ticket: this.props.ticketEditing\r\n    });\r\n  };\r\n  render() {\r\n    const { ticket } = this.state;\r\n    return (\r\n      <Container>\r\n        <Card style={this.classes.card}>\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-evenly\"\r\n              alignItems=\"flex-start\"\r\n            >\r\n              <Grid item md={6} className=\"content__grid\">\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  style={this.classes.title}\r\n                  gutterBottom\r\n                >\r\n                  {_.get(ticket[1], \"fromStation.province\", \"\")} -{\" \"}\r\n                  {_.get(ticket[1], \"toStation.province\", \"\")}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Nhà xe : {_.get(ticket[1], \"company.name\", \"\")}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Giờ khởi hành :<Moment format=\" HH:mm DD/MM/YYYY\">{_.get(ticket[1], \"startTime\", \"\")}</Moment> \r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Loại ghế ngồi : {_.get(ticket[1], \"carType\", \"\")}\r\n                </Typography>\r\n                <Typography style={{ marginTop: \"16px\" }} color=\"textPrimary\">\r\n                  Người đặt vé :{\" \"}\r\n                  <Link style={this.classes.link} to={`/manager/users/${_.get(ticket[0], \"userId._id\", \"\")}`}>\r\n                  {_.get(ticket[0], \"userId.fullName\", \"\")}\r\n                  </Link> \r\n                </Typography>\r\n                <Typography color=\"textPrimary\">\r\n                  Email :{\" \"}\r\n                  {_.get(ticket[0], \"userId.email\", \"\")}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item md={6} className=\"content__grid\">\r\n                <Typography color=\"textSecondary\">\r\n                  Mã số ghế :{\" \"}\r\n                  {_.get(ticket[0], \"seats\", [])\r\n                    .map(seat => seat.code)\r\n                    .join(\", \")}\r\n                </Typography>\r\n                <Typography color=\"textPrimary\">\r\n                  Giá vé :{\" \"}\r\n                  <NumberFormat\r\n                    value={_.get(ticket[1], \"price\")}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    suffix={\" VND\"}\r\n                  />\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">\r\n                  Tổng tiền vé :{\" \"}\r\n                  <NumberFormat\r\n                    value={_.get(ticket[0], \"totalPrice\")}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    suffix={\" VND\"}\r\n                  />\r\n                </Typography>\r\n                <Typography style={{ marginTop: \"16px\" }} color=\"textPrimary\">\r\n                Số điện thoại : {_.get(ticket[0], \"phone\", \"\")}\r\n              </Typography>\r\n              <Typography color=\"textPrimary\">\r\n                Địa chỉ : {_.get(ticket[0], \"address\", \"\")}\r\n              </Typography>\r\n              <Typography color=\"textPrimary\">\r\n                Ghi chú : {_.get(ticket[0], \"note\", \"\")}\r\n              </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"auto\" }}\r\n              onClick={() => this.props.history.push(\"./\")}\r\n            >\r\n              Trở về\r\n            </Button>\r\n\r\n            <AlertDialog\r\n              id={_.get(ticket[0], \"_id\")}\r\n              deleteAction={this.deleteTicket}\r\n              type={\"Vé\"}\r\n            />\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ticketEditing: state.layout.ticketEditing\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getTicketById, deleteTicket })(\r\n  TicketById\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AlertDialog from \"../Utils/alertDialog\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Moment from \"react-moment\";\r\nimport _ from \"lodash\";\r\n\r\nclass SingleTicket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trip: {}\r\n    };\r\n  }\r\n  componentDidMount = async () => {\r\n    const tripId = this.props.ticket.tripId._id;\r\n    await this.props.getTrip(tripId);\r\n    this.setState({ trip: this.props.trip });\r\n  };\r\n  render() {\r\n    const { ticket } = this.props;\r\n    const { trip } = this.state;\r\n    return (\r\n      <Card style={{ minWidth: \"275px\", margin: \"20px\" }}>\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Grid item md={6} className=\"content__grid\">\r\n              <Typography variant=\"h5\" style={{color: \"#c9620f\"}} gutterBottom>\r\n                {_.get(trip, \"fromStation.province\", \"\")} -{\" \"}\r\n                {_.get(trip, \"toStation.province\", \"\")}\r\n              </Typography>\r\n              <Typography  color=\"textSecondary\">\r\n                Nhà xe: {_.get(trip, \"company.name\", \"\")}\r\n              </Typography>\r\n              <Typography style={{ marginBottom: \"12px\" }} color=\"textSecondary\">\r\n                  Loại ghế ngồi : {_.get(trip, \"carType\", \"\")}\r\n                </Typography>\r\n              <Typography color=\"textPrimary\">\r\n                Điểm xuất phát: {_.get(trip, \"fromStation.name\", \"\")}\r\n              </Typography>\r\n              <Typography color=\"textPrimary\">\r\n                Điểm đến: {_.get(trip, \"toStation.name\", \"\")}\r\n              </Typography>\r\n              <Typography style={{ marginBottom: \"12px\" }} color=\"textPrimary\">\r\n                Giờ khởi hành:{\" \"}\r\n                <Moment format=\" HH:mm DD/MM/YYYY\">\r\n                  {_.get(trip, \"startTime\", \"\")}\r\n                </Moment>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={6} className=\"content__grid\">\r\n            <Typography  color=\"textSecondary\">\r\n                Giá vé:\r\n                <NumberFormat\r\n                  value={_.get(trip, \"price\", \"\")}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  suffix={\" VND\"}\r\n                />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                Mã số ghế: {ticket.seats.map(seat => seat.code).join(\", \")}\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textPrimary\">\r\n                Tổng tiền vé :{\" \"}\r\n                <NumberFormat\r\n                  value={ticket.totalPrice}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  suffix={\" VND\"}\r\n                />\r\n              </Typography>\r\n              <Typography style={{ marginTop: \"16px\" }} color=\"textPrimary\">\r\n                Số điện thoại : {ticket.phone ? ticket.phone : \"\"}\r\n              </Typography>\r\n              <Typography color=\"textPrimary\">\r\n                Địa chỉ : {ticket.address ? ticket.address : \"\"}\r\n              </Typography>\r\n              <Typography color=\"textPrimary\">\r\n                Ghi chú : {ticket.note ? ticket.note : \"\"}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n          <div style={{ marginLeft: \"auto\" }}>\r\n            <AlertDialog\r\n              id={ticket._id}\r\n              deleteAction={this.props.deleteTicket}\r\n              type={\"Vé\"}\r\n            />\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    trip: state.layout.tripEditing\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(SingleTicket);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getTickets, deleteTicket} from '../../Actions/ticket';\r\nimport {getTripByIdClient} from '../../Actions/trip';\r\nimport SingleTicket from './SingleTicket';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass Ticket extends Component {\r\n    componentDidMount() {\r\n        this.props.getTickets()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"md\">\r\n            <h1 className=\"title_addnew\">DANH SÁCH VÉ XE ĐÃ ĐẶT</h1>\r\n                {this.props.tickets.filter(ticket => ticket.userId._id === this.props.user.userId).map((ticket, index) => {\r\n                    return (\r\n                    <SingleTicket ticket={ticket} key= {index} getTrip={this.props.getTripByIdClient} deleteTicket={this.props.deleteTicket} />\r\n                    )\r\n                })}\r\n              \r\n            </Container>\r\n          </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tickets: state.tickets,\r\n        user: state.auth.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getTickets, deleteTicket, getTripByIdClient})(Ticket)","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nclass SelectSeats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seatCodes: props.seatCodes\r\n    };\r\n  }\r\n\r\n  changeSeat = seatCode => {\r\n    if (this.state.seatCodes.indexOf(seatCode) === -1) {\r\n      this.setState(\r\n        {\r\n          seatCodes: [...this.state.seatCodes, seatCode]\r\n        },\r\n        () => this.props.selectSeat(this.state.seatCodes)\r\n      );\r\n    } else {\r\n      this.setState(\r\n        {\r\n          seatCodes: _.pull(this.state.seatCodes, seatCode)\r\n        },\r\n        () => this.props.selectSeat(this.state.seatCodes)\r\n      );\r\n    }\r\n  };\r\n\r\n  availableSeat = seat => {\r\n    if (this.props.seatDisable.indexOf(seat) > -1) return false;\r\n    else if (this.props.seatCodes.indexOf(seat) > -1) return \"primary\";\r\n    else return \"\";\r\n  };\r\n\r\n  renderSeats = () => {\r\n    const Seats = _.get(this.props, \"trip.seats\", []);\r\n    if (Seats.length === 8) {\r\n      return (\r\n        <div>\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            aria-label=\"contained primary button group\"\r\n          >\r\n            {Seats.map((s, index) => {\r\n              return (\r\n                <Button\r\n                  disabled={this.availableSeat(s.code) === false}\r\n                  color={this.availableSeat(s.code)}\r\n                  key={index}\r\n                  onClick={() => this.changeSeat(s.code)}\r\n                >\r\n                  {s.code}\r\n                </Button>\r\n              );\r\n            })}\r\n          </ButtonGroup>\r\n        </div>\r\n      );\r\n    } else if (Seats.length === 16) {\r\n      return (\r\n        <div>\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            aria-label=\"contained primary button group\"\r\n          >\r\n            {Seats.slice(0, 8).map((s, index) => {\r\n              return (\r\n                <Button\r\n                  disabled={this.availableSeat(s.code) === false}\r\n                  color={this.availableSeat(s.code)}\r\n                  key={index}\r\n                  onClick={() => this.changeSeat(s.code)}\r\n                >\r\n                  {s.code}\r\n                </Button>\r\n              );\r\n            })}\r\n          </ButtonGroup>\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            aria-label=\"contained primary button group\"\r\n          >\r\n            {Seats.slice(8, 16).map((s, index) => {\r\n              return (\r\n                <Button\r\n                  disabled={this.availableSeat(s.code) === false}\r\n                  color={this.availableSeat(s.code)}\r\n                  key={index}\r\n                  onClick={() => this.changeSeat(s.code)}\r\n                >\r\n                  {s.code}\r\n                </Button>\r\n              );\r\n            })}\r\n          </ButtonGroup>\r\n        </div>\r\n      );\r\n    } else if (Seats.length === 40) {\r\n      return (\r\n        <div>\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            aria-label=\"contained primary button group\"\r\n          >\r\n            {Seats.slice(0, 10).map((s, index) => {\r\n              return (\r\n                <Button\r\n                  disabled={this.availableSeat(s.code) === false}\r\n                  color={this.availableSeat(s.code)}\r\n                  key={index}\r\n                  onClick={() => this.changeSeat(s.code)}\r\n                >\r\n                  {s.code}\r\n                </Button>\r\n              );\r\n            })}\r\n          </ButtonGroup>\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            aria-label=\"contained primary button group\"\r\n          >\r\n            {Seats.slice(10, 20).map((s, index) => {\r\n              return (\r\n                <Button\r\n                  disabled={this.availableSeat(s.code) === false}\r\n                  color={this.availableSeat(s.code)}\r\n                  key={index}\r\n                  onClick={() => this.changeSeat(s.code)}\r\n                >\r\n                  {s.code}\r\n                </Button>\r\n              );\r\n            })}\r\n          </ButtonGroup>\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            aria-label=\"contained primary button group\"\r\n            style={{ marginTop: \"20px\" }}\r\n          >\r\n            {Seats.slice(20, 30).map((s, index) => {\r\n              return (\r\n                <Button\r\n                  disabled={this.availableSeat(s.code) === false}\r\n                  color={this.availableSeat(s.code)}\r\n                  key={index}\r\n                  onClick={() => this.changeSeat(s.code)}\r\n                >\r\n                  {s.code}\r\n                </Button>\r\n              );\r\n            })}\r\n          </ButtonGroup>\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            aria-label=\"contained primary button group\"\r\n          >\r\n            {Seats.slice(30, 40).map((s, index) => {\r\n              return (\r\n                <Button\r\n                  disabled={this.availableSeat(s.code) === false}\r\n                  color={this.availableSeat(s.code)}\r\n                  key={index}\r\n                  onClick={() => this.changeSeat(s.code)}\r\n                >\r\n                  {s.code}\r\n                </Button>\r\n              );\r\n            })}\r\n          </ButtonGroup>\r\n        </div>\r\n      );\r\n    } else\r\n      return (\r\n        <div>\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            aria-label=\"contained primary button group\"\r\n          >\r\n            {Seats.slice(0, 10).map((s, index) => {\r\n              return (\r\n                <Button\r\n                  disabled={this.availableSeat(s.code) === false}\r\n                  color={this.availableSeat(s.code)}\r\n                  key={index}\r\n                  onClick={() => this.changeSeat(s.code)}\r\n                >\r\n                  {s.code}\r\n                </Button>\r\n              );\r\n            })}\r\n          </ButtonGroup>\r\n\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            aria-label=\"contained primary button group\"\r\n            style={{ marginTop: \"20px\" }}\r\n          >\r\n            {Seats.slice(10, 20).map((s, index) => {\r\n              return (\r\n                <Button\r\n                  disabled={this.availableSeat(s.code) === false}\r\n                  color={this.availableSeat(s.code)}\r\n                  key={index}\r\n                  onClick={() => this.changeSeat(s.code)}\r\n                >\r\n                  {s.code}\r\n                </Button>\r\n              );\r\n            })}\r\n          </ButtonGroup>\r\n        </div>\r\n      );\r\n  };\r\n  render() {\r\n    return <div>{this.renderSeats()}</div>;\r\n  }\r\n}\r\n\r\nexport default SelectSeats;\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nclass InformationForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      phone: this.props.info.phone || \"\",\r\n      address: this.props.info.address || \"\",\r\n      note: this.props.info.note || \"\",\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    }, () =>{\r\n        const {phone, address, note} = this.state;\r\n        this.props.setInfo({phone, address, note});\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {phone, address, note} = this.state;\r\n    return (\r\n      <div className=\"add_station\">\r\n        <form autoComplete=\"off\">\r\n            <TextField\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={phone}\r\n              label=\"Số điện thoại\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n            <TextField\r\n              id=\"address\"\r\n              name=\"address\"\r\n              value={address}\r\n              label=\"Địa chỉ\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n            <TextField\r\n              id=\"note\"\r\n              name=\"note\"\r\n              value={note}\r\n              label=\"Ghi chú\"\r\n              variant=\"outlined\"\r\n              style={{ margin: \"15px\", width: \"40%\" }}\r\n              onChange={this.onChange}\r\n            />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InformationForm;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SelectSeats from \"./SelectSeats\";\r\nimport InformationForm from \"./informationForm\";\r\nimport { createTicket, cancelBooking } from \"./../../Actions/ticket\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"Chọn ghế trống\", \"Điền thông tin cá nhân\", \"Xác nhận thanh toán\"];\r\n}\r\n\r\nfunction getStepContent(stepIndex, props) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return (\r\n        <SelectSeats\r\n          trip={props.trip}\r\n          backgroundSeat={props.backgroundSeat}\r\n          seatCodes={props.seatCodes}\r\n          seatDisable={props.seatDisable}\r\n          selectSeat={props.selectSeat}\r\n        />\r\n      );\r\n    case 1:\r\n      return <InformationForm info={props.info} setInfo={props.setInfo} />;\r\n    case 2:\r\n      const totalPrice = props.seatCodes.length * props.trip.price;\r\n      return (\r\n        <div>\r\n          <Typography>\r\n            Vui lòng kiểm tra thông tin ghế và tổng số tiền trước khi xác nhận\r\n            thanh toán!\r\n          </Typography>\r\n          <Typography variant=\"h6\">\r\n            Mã số ghế: {props.seatCodes.join(\", \")}\r\n          </Typography>\r\n          <Typography variant=\"h6\">\r\n            Tổng số tiền:\r\n            <NumberFormat\r\n              value={totalPrice}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              suffix={\" VND\"}\r\n            />\r\n          </Typography>\r\n        </div>\r\n      );\r\n    default:\r\n      return \"Unknown stepIndex\";\r\n  }\r\n}\r\n\r\nconst HorizontalStepper = props => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              Đặt vé thành công, vui lòng kiểm tra thông tin trong email\r\n            </Typography>\r\n            <Button onClick={handleReset}>Đặt vé khác</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className={classes.instructions}>\r\n              {getStepContent(activeStep, props)}\r\n            </div>\r\n            <div>\r\n              {activeStep === 0 ? (\r\n                <Button\r\n                  onClick={() => props.cancelBooking()}\r\n                  className={classes.backButton}\r\n                >\r\n                  HỦY\r\n                </Button>\r\n              ) : (\r\n                <Button onClick={handleBack} className={classes.backButton}>\r\n                  TRỞ VỀ\r\n                </Button>\r\n              )}\r\n              {activeStep === 2 ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    props.bookingTickets();\r\n                    handleNext();\r\n                  }}\r\n                >\r\n                  HOÀN TẤT\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  disabled={props.seatCodes.length === 0}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleNext}\r\n                >\r\n                  TIẾP TỤC\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(null, {\r\n  createTicket,\r\n  cancelBooking\r\n})(HorizontalStepper);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { getTripById } from \"./../../Actions/trip\";\r\nimport { createTicket, cancelBooking } from \"./../../Actions/ticket\";\r\nimport ErrorSnackBar from \"./../Utils/errorSnackBar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HorizontalStepper from './Stepper';\r\n\r\nclass Booking extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trip: {},\r\n      seatCodes: [],\r\n      info: {},\r\n      seatDisable: []\r\n    };\r\n  }\r\n\r\n  bookingTickets = () => {\r\n    const { trip, seatCodes, info } = this.state;\r\n    const data = {\r\n      tripId: trip._id,\r\n      info,\r\n      seatCodes\r\n    };\r\n    this.props\r\n      .createTicket(data)\r\n      .then(() => this.props.getTripById(this.props.tripId))\r\n      .then(() => {\r\n          this.setState({\r\n            trip: this.props.trip,\r\n            seatDisable: this.props.trip.seats\r\n              .filter(s => s.isBooked === true)\r\n              .map(s => s.code)\r\n          })\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  setInfo = (info) => {\r\n    this.setState({info})\r\n  }\r\n\r\n  selectSeat = (seatCodes) => {\r\n      this.setState({\r\n        seatCodes\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { tripId } = this.props;\r\n    this.props\r\n      .getTripById(tripId)\r\n      .then(() =>\r\n        this.setState({\r\n          trip: this.props.trip,\r\n          seatDisable: this.props.trip.seats\r\n            .filter(s => s.isBooked === true)\r\n            .map(s => s.code)\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        {_.get(this.state, \"error\") && (\r\n          <ErrorSnackBar error={_.get(this.state, \"error\", \"\")} />\r\n        )}\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <HorizontalStepper\r\n            trip={this.state.trip}\r\n            seatDisable={this.state.seatDisable}\r\n            seatCodes={this.state.seatCodes}\r\n            info={this.state.info}\r\n            setInfo={this.setInfo}\r\n            selectSeat={this.selectSeat}\r\n            bookingTickets={this.bookingTickets}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    trip: state.layout.tripEditing\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getTripById,\r\n  createTicket,\r\n  cancelBooking\r\n})(Booking);\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Booking from './Booking';\r\nimport NumberFormat from 'react-number-format';\r\nimport Moment from 'react-moment';\r\nimport useStyles from '../Utils/style';\r\n\r\nconst SimpleCard = (props) => {\r\n  const classes = useStyles();\r\n  const {trip, tripEditing} = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item md={6}>\r\n            <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n              {trip.fromStation.province} - {trip.toStation.province}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom className={classes.link}>\r\n              {trip.company.name}\r\n            </Typography>\r\n            <ButtonBase className={classes.image}>\r\n              <img\r\n                className={classes.img}\r\n                alt=\"complex\"\r\n                src={\r\n                  trip.company.image\r\n                    ? trip.company.image\r\n                    : \"https://upload.wikimedia.org/wikipedia/vi/1/1a/Nh%C3%A0_ga_b%E1%BA%BFn_xe_mi%E1%BB%81n_%C4%90%C3%B4ng.JPG\"\r\n                }\r\n              />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n          <Typography variant=\"h6\" color=\"primary\">\r\n              Giá vé :{\" \"}\r\n              <NumberFormat\r\n                value={trip.price}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                suffix={\" VND\"}\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" className={classes.link}>\r\n              Điểm xuất phát : {trip.fromStation.name}\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" className={classes.link}>\r\n              Điểm đến : {trip.toStation.name}\r\n            </Typography>\r\n            <Typography color=\"textPrimary\">\r\n              Giờ khởi hành:{\" \"}\r\n              <Moment format=\" HH:mm DD/MM/YYYY\">{trip.startTime}</Moment>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{trip.carType}</Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Số ghế trống: {trip.seats.filter(e => !e.isBooked).length} /{\" \"}\r\n              {trip.seats.length}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <CardActions>\r\n          {tripEditing._id === trip._id ? (\r\n            <Booking tripId={trip._id} />\r\n          ) : (\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"auto\" }}\r\n              onClick={() => props.getTripById(trip._id)}\r\n            >\r\n              {trip.seats.filter(e => !e.isBooked).length === 0\r\n                ? \"Hết ghế \"\r\n                : \"Chọn ghế\"}\r\n            </Button>\r\n          )}\r\n        </CardActions>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default withRouter(SimpleCard);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTrips, getTripById, deleteTrip } from \"../../Actions/trip\";\r\nimport { getStations } from \"../../Actions/station\";\r\nimport { getCompanies } from \"../../Actions/company\";\r\nimport SingleTrip from \"./SingleTrip\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {changeAlias} from '../Utils/changeAlias';\r\nimport _ from \"lodash\";\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 300,\r\n      width: 300\r\n    }\r\n  }\r\n};\r\n\r\nclass TripList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tripName: \"\",\r\n      companiesList: [],\r\n      stationsList: [],\r\n      provinceList: [],\r\n      companiesFilter: [],\r\n      fromStationFilter: [],\r\n      fromProvinceFilter: [],\r\n      toStationFilter: [],\r\n      toProvinceFilter: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getTrips();\r\n    this.props.getCompanies().then(() => {\r\n      this.setState({\r\n        companiesList: this.props.companies\r\n      });\r\n    });\r\n    this.props.getStations().then(() => {\r\n      this.setState({\r\n        stationsList: this.props.stations,\r\n        provinceList: _.uniq(this.props.stations.map(stt => stt.province))\r\n      });\r\n    });\r\n  }\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  cancelFilter = () => {\r\n    this.setState({\r\n      companiesFilter: [],\r\n      fromStationFilter: [],\r\n      fromProvinceFilter: [],\r\n      toStationFilter: [],\r\n      toProvinceFilter: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tripName,\r\n      companiesList,\r\n      stationsList,\r\n      provinceList,\r\n      companiesFilter,\r\n      fromStationFilter,\r\n      toStationFilter,\r\n      fromProvinceFilter,\r\n      toProvinceFilter\r\n    } = this.state;\r\n\r\n    // search by Trip name\r\n    const trips = this.props.trips;\r\n\r\n    let searchTrip = [];\r\n    if (tripName) {\r\n      trips.filter(trip => {\r\n        let name =\r\n          changeAlias(trip.fromStation.province) +\r\n          changeAlias(trip.toStation.province);\r\n        if (name.indexOf(changeAlias(tripName)) > -1) {\r\n          searchTrip = [...searchTrip, trip];\r\n        }\r\n        return trip;\r\n      });\r\n    } else {\r\n      searchTrip = trips;\r\n    }\r\n\r\n    // filter by company\r\n    let filterByCompany = [];\r\n    if (companiesFilter.length > 0) {\r\n      filterByCompany = trips.filter(\r\n        trip => companiesFilter.indexOf(trip.company._id) > -1\r\n      );\r\n    } else {\r\n      filterByCompany = trips;\r\n    }\r\n\r\n    // filter by from province\r\n    let filterByFromProvince = [];\r\n    if (fromProvinceFilter.length > 0) {\r\n      filterByFromProvince = trips.filter(\r\n        trip => fromProvinceFilter.indexOf(trip.fromStation.province) > -1\r\n      );\r\n    } else {\r\n      filterByFromProvince = trips;\r\n    }\r\n\r\n    // filter by to province\r\n    let filterByToProvince = [];\r\n    if (toProvinceFilter.length > 0) {\r\n      filterByToProvince = trips.filter(\r\n        trip => toProvinceFilter.indexOf(trip.toStation.province) > -1\r\n      );\r\n    } else {\r\n      filterByToProvince = trips;\r\n    }\r\n\r\n    // filter by from station\r\n    let filterByFromStation = [];\r\n    if (fromStationFilter.length > 0) {\r\n      filterByFromStation = trips.filter(\r\n        trip => fromStationFilter.indexOf(trip.fromStation._id) > -1\r\n      );\r\n    } else {\r\n      filterByFromStation = trips;\r\n    }\r\n\r\n    // filter by to station\r\n    let filterByToStation = [];\r\n    if (toStationFilter.length > 0) {\r\n      filterByToStation = trips.filter(\r\n        trip => toStationFilter.indexOf(trip.toStation._id) > -1\r\n      );\r\n    } else {\r\n      filterByToStation = trips;\r\n    }\r\n\r\n    const renderTrip = _.intersection(\r\n      searchTrip,\r\n      filterByCompany,\r\n      filterByFromProvince,\r\n      filterByToProvince,\r\n      filterByFromStation,\r\n      filterByToStation\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n          <h1 className=\"title_addnew\">Danh sách chuyến đi</h1>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Grid item md={1}></Grid>\r\n            <Grid item md={3}>\r\n              <Card>\r\n                <h2 className=\"title_addnew\">BỘ LỌC & TÌM KIẾM</h2>\r\n                <h3 className=\"title_addnew\">{`Tổng số kết quả : ${renderTrip.length}`}</h3>\r\n\r\n                <Button\r\n                  style={{ justifyContent: \"center\" }}\r\n                  variant=\"contained\"\r\n                  onClick={() => this.cancelFilter()}\r\n                >\r\n                  Hủy\r\n                </Button>\r\n                <CardContent>\r\n                  <TextField\r\n                    id=\"tripName\"\r\n                    name=\"tripName\"\r\n                    value={tripName}\r\n                    label=\"Tìm chuyến đi\"\r\n                    variant=\"outlined\"\r\n                    style={{ margin: \"15px\", width: \"80%\" }}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                    <InputLabel>Nhà xe</InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      name=\"companiesFilter\"\r\n                      value={companiesFilter}\r\n                      onChange={this.onChange}\r\n                      input={<Input />}\r\n                      renderValue={selected => (\r\n                        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                          {companiesList\r\n                            .filter(com => selected.indexOf(com._id) > -1)\r\n                            .map(com => (\r\n                              <Chip\r\n                                key={com._id}\r\n                                label={com.name}\r\n                                style={{ margin: 2 }}\r\n                              />\r\n                            ))}\r\n                        </div>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {companiesList.map(company => (\r\n                        <MenuItem key={company._id} value={company._id}>\r\n                          <Checkbox\r\n                            checked={companiesFilter.indexOf(company._id) > -1}\r\n                          />\r\n                          <ListItemText primary={company.name} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                    <InputLabel>Nơi đi</InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      name=\"fromProvinceFilter\"\r\n                      value={fromProvinceFilter}\r\n                      onChange={this.onChange}\r\n                      input={<Input />}\r\n                      renderValue={selected => (\r\n                        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                          {selected.map(value => (\r\n                            <Chip\r\n                              key={value}\r\n                              label={value}\r\n                              style={{ margin: 2 }}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {provinceList.map(province => (\r\n                        <MenuItem key={province} value={province}>\r\n                          <Checkbox\r\n                            checked={fromProvinceFilter.indexOf(province) > -1}\r\n                          />\r\n                          <ListItemText primary={province} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                    <InputLabel>Nơi đến</InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      name=\"toProvinceFilter\"\r\n                      value={toProvinceFilter}\r\n                      onChange={this.onChange}\r\n                      input={<Input />}\r\n                      renderValue={selected => (\r\n                        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                          {selected.map(value => (\r\n                            <Chip\r\n                              key={value}\r\n                              label={value}\r\n                              style={{ margin: 2 }}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {provinceList.map(province => (\r\n                        <MenuItem key={province} value={province}>\r\n                          <Checkbox\r\n                            checked={toProvinceFilter.indexOf(province) > -1}\r\n                          />\r\n                          <ListItemText primary={province} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                    <InputLabel>Điểm đón khách</InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      name=\"fromStationFilter\"\r\n                      value={fromStationFilter}\r\n                      onChange={this.onChange}\r\n                      input={<Input />}\r\n                      renderValue={selected => (\r\n                        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                          {stationsList\r\n                            .filter(stt => selected.indexOf(stt._id) > -1)\r\n                            .map(stt => (\r\n                              <Chip\r\n                                key={stt._id}\r\n                                label={stt.name}\r\n                                style={{ margin: 2 }}\r\n                              />\r\n                            ))}\r\n                        </div>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {stationsList.map(station => (\r\n                        <MenuItem key={station._id} value={station._id}>\r\n                          <Checkbox\r\n                            checked={\r\n                              fromStationFilter.indexOf(station._id) > -1\r\n                            }\r\n                          />\r\n                          <ListItemText primary={station.name} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl style={{ margin: \"15px\", width: \"80%\" }}>\r\n                    <InputLabel>Điểm trả khách</InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      name=\"toStationFilter\"\r\n                      value={toStationFilter}\r\n                      onChange={this.onChange}\r\n                      input={<Input />}\r\n                      renderValue={selected => (\r\n                        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                          {stationsList\r\n                            .filter(stt => selected.indexOf(stt._id) > -1)\r\n                            .map(stt => (\r\n                              <Chip\r\n                                key={stt._id}\r\n                                label={stt.name}\r\n                                style={{ margin: 2 }}\r\n                              />\r\n                            ))}\r\n                        </div>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {stationsList.map(station => (\r\n                        <MenuItem key={station._id} value={station._id}>\r\n                          <Checkbox\r\n                            checked={toStationFilter.indexOf(station._id) > -1}\r\n                          />\r\n                          <ListItemText primary={station.name} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={8}>\r\n              {renderTrip.map((trip, index) => {\r\n                return (\r\n                  <SingleTrip\r\n                    trip={trip}\r\n                    key={index}\r\n                    deleteTrip={this.props.deleteTrip}\r\n                    getTripById={this.props.getTripById}\r\n                    tripEditing={this.props.tripEditing}\r\n                  />\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    trips: state.trips,\r\n    tripEditing: state.layout.tripEditing,\r\n    stations: state.stations,\r\n    companies: state.companies\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getTrips,\r\n  getTripById,\r\n  deleteTrip,\r\n  getStations,\r\n  getCompanies\r\n})(TripList);\r\n","import React, { Component } from \"react\";\r\nimport TripList from \"./Trip\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Explore extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Chào mừng bạn đến Vexere.com</h2>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ margin: \"15px\" }}\r\n          onClick={() => this.props.history.push('/ticketmanager')}\r\n        >\r\n          Quản lý vé xe đã đặt\r\n        </Button>\r\n        <TripList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Explore;\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>PAGE NOT FOUND</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from './Components/Auth/Login';\r\nimport SignUp from './Components/Auth/SignUp';\r\nimport Sidebar from './Components/Manager/SideBar';\r\nimport Navbar from './Components/Navbar';\r\nimport setAuthToken from './Components/Utils/setAuthToken';\r\nimport {setCurrentUser} from './Actions/auth';\r\nimport { connect } from 'react-redux';\r\nimport AdminRoute from './Components/Utils/AdminRoute';\r\nimport ClientRoute from './Components/Utils/ClientRoute';\r\nimport isAuthenticate from './Components/Utils/isAuthenticate';\r\nimport Profile from './Components/Auth/Profile';\r\nimport UpdateProfile from './Components/Auth/UpdateProfile';\r\nimport User from './Components/Manager/User/User';\r\nimport UserById from './Components/Manager/User/UserById';\r\nimport Station from './Components/Manager/Station/Station';\r\nimport AddStation from './Components/Manager/Station/AddStation';\r\nimport EditStation from './Components/Manager/Station/EditStation';\r\nimport StationById from './Components/Manager/Station/StationById';\r\nimport Company from './Components/Manager/Company/Company';\r\nimport AddCompany from './Components/Manager/Company/AddCompany';\r\nimport EditCompany from './Components/Manager/Company/EditCompany';\r\nimport CompanyById from './Components/Manager/Company/CompanyById';\r\nimport Trip from './Components/Manager/Trip/Trip';\r\nimport TripById from './Components/Manager/Trip/TripById';\r\nimport AddTrip from './Components/Manager/Trip/AddTrip';\r\nimport EditTrip from './Components/Manager/Trip/EditTrip';\r\nimport Ticket from './Components/Manager/Ticket/Ticket';\r\nimport TicketById from './Components/Manager/Ticket/TicketById';\r\nimport TicketManager from './Components/Client/TicketManager';\r\nimport Explore from './Components/Client/Explore';\r\nimport NotFound from './Components/Utils/NotFound'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if(isAuthenticate().token) {\r\n      setAuthToken(isAuthenticate().token);\r\n      props.setCurrentUser(isAuthenticate().decoded);\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const {auth} = this.props;\r\n    const {isAuthenticate, profile} = auth;\r\n    return (\r\n      <div className=\"App\">\r\n      <BrowserRouter>\r\n        { (isAuthenticate && profile.userType ==='admin') && <Sidebar {...this.props}/>}\r\n        { (isAuthenticate && profile.userType ==='client') && <Navbar {...this.props}/>}\r\n        <Switch>\r\n          <Route path='/' exact render= {(props) => {\r\n            if (isAuthenticate && profile.userType ==='admin') return <Trip {...props}/>;\r\n            if (isAuthenticate && profile.userType ==='client') return <Explore {...props}/>;\r\n            return <Redirect to='/login'/>\r\n          }}\r\n          />\r\n          <Route path='/login' exact render= {(props) => {\r\n            if (isAuthenticate) return <Redirect to='/'/>\r\n            return <Login {...props}/>\r\n          }}\r\n          />\r\n          <AdminRoute path = '/manager/trips' exact component = {Trip}/>\r\n          <AdminRoute path = '/manager/trips/addtrip' exact component = {AddTrip}/>\r\n          <AdminRoute path = '/manager/trips/:id/edittrip' exact component = {EditTrip}/>\r\n          <AdminRoute path = '/manager/trips/:id' exact component = {TripById}/>\r\n          <ClientRoute path = '/profile' exact component = {Profile}/>\r\n          <ClientRoute path = '/updateprofile' exact component = {UpdateProfile}/>\r\n          <AdminRoute path = '/manager/tickets' exact component = {Ticket}/>\r\n          <AdminRoute path = '/manager/tickets/:id' exact component = {TicketById}/>\r\n          <AdminRoute path = '/manager/stations' exact component = {Station}/>\r\n          <AdminRoute path = '/manager/stations/addstation' exact component = {AddStation}/>\r\n          <AdminRoute path = '/manager/stations/:id/editstation' exact component = {EditStation}/>\r\n          <AdminRoute path = '/manager/stations/:id/' exact component = {StationById}/>\r\n          <AdminRoute path = '/manager/companies' exact component = {Company}/>\r\n          <AdminRoute path = '/manager/companies/addcompany' exact component = {AddCompany}/>\r\n          <AdminRoute path = '/manager/companies/:id/editcompany' exact component = {EditCompany}/>\r\n          <AdminRoute path = '/manager/companies/:id/' exact component = {CompanyById}/>\r\n          <AdminRoute path = '/manager/users' exact component = {User}/>\r\n          <AdminRoute path = '/manager/users/:id' exact component = {UserById}/>\r\n          <ClientRoute path = '/ticketmanager' exact component = {TicketManager}/>\r\n          <Route path = '/signup' component = {SignUp}/>\r\n          <Route path = '/*' component = {NotFound}/>\r\n          <Route path = '/notfound' component = {NotFound}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth : state.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setCurrentUser})(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import _ from 'lodash'\r\nimport * as types from '../Actions/actionConstant'\r\nconst initialState = {\r\n    isAuthenticate : false,\r\n    profile : {}\r\n}\r\n\r\nconst authReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n      case types.SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticate: !_.isEmpty(action.payload),\r\n          profile: action.payload\r\n        };\r\n\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    return state;\r\n}\r\n\r\nexport default authReducer;","import * as types from '../Actions/actionConstant'\r\nconst initialState = [];\r\n\r\nconst tripReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n      case types.GET_TRIPS:\r\n        return action.payload;\r\n\r\n      case types.CREATE_TRIP:\r\n        return [...state, action.payload];\r\n\r\n      case types.UPDATE_TRIP:\r\n        const trip = action.payload;\r\n        const index = state.findIndex(tr => tr._id === trip._id);\r\n        state[index] = trip;\r\n        return [...state];\r\n      default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default tripReducer","import * as types from '../Actions/actionConstant'\r\nconst initialState = [];\r\n\r\nconst stationReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_STATIONS:\r\n            return action.payload\r\n\r\n        case types.CREATE_STATION:\r\n            return [...state, action.payload]\r\n\r\n        case types.UPDATE_STATION:\r\n            const station = action.payload;\r\n            const index = state.findIndex(st => st._id === station._id)\r\n            state[index] = station\r\n            return [...state]\r\n            \r\n        default:\r\n            return state;\r\n        }\r\n}\r\n\r\nexport default stationReducer","import * as types from \"../Actions/actionConstant\";\r\nconst initialState = [];\r\n\r\nconst companyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_COMPANIES:\r\n      return action.payload;\r\n\r\n    case types.CREATE_COMPANY:\r\n      return [...state, action.payload];\r\n\r\n    case types.UPDATE_COMPANY:\r\n      const company = action.payload;\r\n      const index = state.findIndex(com => com._id === company._id);\r\n      state[index] = company;\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default companyReducer;\r\n","import * as types from '../Actions/actionConstant'\r\nconst initialState = [];\r\n\r\nconst ticketReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_TICKETS:\r\n            return action.payload\r\n\r\n        case types.CREATE_TICKET:\r\n            return [...state, action.payload]\r\n            \r\n        default:\r\n            return state;\r\n        }\r\n}\r\n\r\nexport default ticketReducer","import * as types from \"../Actions/actionConstant\";\r\nconst initialState = [];\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_USERS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;","import * as types from \"../Actions/actionConstant\";\r\nconst initialState = {\r\n  stationEditing: {},\r\n  companyEditing: {},\r\n  tripEditing: {},\r\n  userEditing: {},\r\n  ticketEditing: {},\r\n  adviceCompany: []\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_STATIONBYID:\r\n      return { ...state, stationEditing: action.payload };\r\n\r\n    case types.GET_COMPANYBYID:\r\n      return { ...state, companyEditing: action.payload };\r\n\r\n    case types.GET_TRIPBYID:\r\n      return { ...state, tripEditing: action.payload };\r\n\r\n    case types.GET_TICKETBYID:\r\n      return { ...state, ticketEditing: action.payload };\r\n\r\n    case types.GET_USERBYID:\r\n      return { ...state, userEditing: action.payload };\r\n\r\n    case types.CANCEL_BOOKING:\r\n      return { ...state, tripEditing: {} };\r\n\r\n    case types.GET_ADVICECOMPANY:\r\n      return {...state, adviceCompany : action.payload}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default layoutReducer;\r\n","import {combineReducers} from 'redux';\r\nimport auth from './auth';\r\nimport trips from './trips';\r\nimport stations from './stations';\r\nimport companies from './companies';\r\nimport tickets from './tickets';\r\nimport users from './users';\r\nimport layout from './layout';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth,   \r\n    trips,\r\n    stations,\r\n    companies,\r\n    tickets,\r\n    users,\r\n    layout\r\n})\r\n\r\nexport default rootReducer;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst initialState = {};\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middlewares),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}